!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<<	lib/active_record/associations/association_collection.rb	/^      def <<(*records)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
<=>	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def <=>(version_string)$/;"	f	class:SQLiteAdapter.Version
==	lib/active_record/base.rb	/^      def ==(comparison_object)$/;"	f	class:sanitize_sql_hash_for_conditions
==	lib/active_record/reflection.rb	/^      def ==(other_aggregation)$/;"	f	class:ActiveRecord.Reflection.MacroReflection
===	lib/active_record/associations/association_proxy.rb	/^      def ===(other)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
===	lib/active_record/base.rb	/^      def ===(object)$/;"	f	class:ActiveRecord.Base
AbstractAdapter	lib/active_record/connection_adapters/abstract_adapter.rb	/^    class AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
ActiveRecord	lib/active_record.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/aggregations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/association_preload.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/association_collection.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/association_proxy.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/belongs_to_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_many_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_many_through_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_one_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_one_through_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/autosave_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/base.rb	/^module ActiveRecord #:nodoc:$/;"	m
ActiveRecord	lib/active_record/batches.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/calculations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/callbacks.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/database_limits.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/database_statements.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/query_cache.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/quoting.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/mysql_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/sqlite_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/dirty.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/dynamic_finder_match.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/dynamic_scope_match.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/fixtures.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/locking/optimistic.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/locking/pessimistic.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/migration.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/named_scope.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/nested_attributes.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/observer.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/query_cache.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/reflection.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/schema.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/schema_dumper.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/serialization.rb	/^module ActiveRecord #:nodoc:$/;"	m
ActiveRecord	lib/active_record/serializers/json_serializer.rb	/^module ActiveRecord #:nodoc:$/;"	m
ActiveRecord	lib/active_record/serializers/xml_serializer.rb	/^module ActiveRecord #:nodoc:$/;"	m
ActiveRecord	lib/active_record/session_store.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/test_case.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/timestamp.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/transactions.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/validations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/version.rb	/^module ActiveRecord$/;"	m
ActiveRecordError	lib/active_record/base.rb	/^  class ActiveRecordError < StandardError$/;"	c	class:ActiveRecord
AdapterNotFound	lib/active_record/base.rb	/^  class AdapterNotFound < ActiveRecordError$/;"	c	class:ActiveRecord
AdapterNotSpecified	lib/active_record/base.rb	/^  class AdapterNotSpecified < ActiveRecordError$/;"	c	class:ActiveRecord
AggregateReflection	lib/active_record/reflection.rb	/^    class AggregateReflection < MacroReflection #:nodoc:$/;"	c	class:ActiveRecord.Reflection
Aggregations	lib/active_record/aggregations.rb	/^  module Aggregations # :nodoc:$/;"	m	class:ActiveRecord
AssociationCollection	lib/active_record/associations/association_collection.rb	/^    class AssociationCollection < AssociationProxy #:nodoc:$/;"	c	class:ActiveRecord.Associations
AssociationPreload	lib/active_record/association_preload.rb	/^  module AssociationPreload #:nodoc:$/;"	m	class:ActiveRecord
AssociationProxy	lib/active_record/associations/association_proxy.rb	/^    class AssociationProxy #:nodoc:$/;"	c	class:ActiveRecord.Associations
AssociationReflection	lib/active_record/reflection.rb	/^    class AssociationReflection < MacroReflection #:nodoc:$/;"	c	class:ActiveRecord.Reflection
AssociationTypeMismatch	lib/active_record/base.rb	/^  class AssociationTypeMismatch < ActiveRecordError$/;"	c	class:ActiveRecord
Associations	lib/active_record/associations.rb	/^  module Associations # :nodoc:$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/association_collection.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/association_proxy.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/belongs_to_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_many_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_many_through_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_one_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_one_through_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Attribute	lib/active_record/serializers/xml_serializer.rb	/^    class Attribute #:nodoc:$/;"	c	class:ActiveRecord.XmlSerializer
AttributeAssignmentError	lib/active_record/base.rb	/^  class AttributeAssignmentError < ActiveRecordError$/;"	c	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods.rb	/^  module AttributeMethods #:nodoc:$/;"	m	class:ActiveRecord
AutosaveAssociation	lib/active_record/autosave_association.rb	/^  module AutosaveAssociation$/;"	m	class:ActiveRecord
Base	lib/active_record/base.rb	/^  class Base$/;"	c	class:ActiveRecord
Base	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^  class Base$/;"	c	class:ActiveRecord
Base	lib/active_record/connection_adapters/mysql_adapter.rb	/^  class Base$/;"	c	class:ActiveRecord
Base	lib/active_record/connection_adapters/postgresql_adapter.rb	/^  class Base$/;"	c	class:ActiveRecord
Base	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^  class Base$/;"	c	class:ActiveRecord
Base	lib/active_record/connection_adapters/sqlite_adapter.rb	/^  class Base$/;"	c	class:ActiveRecord
Batches	lib/active_record/batches.rb	/^  module Batches # :nodoc:$/;"	m	class:ActiveRecord
BelongsToAssociation	lib/active_record/associations/belongs_to_association.rb	/^    class BelongsToAssociation < AssociationProxy #:nodoc:$/;"	c	class:ActiveRecord.Associations
BelongsToPolymorphicAssociation	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^    class BelongsToPolymorphicAssociation < AssociationProxy #:nodoc:$/;"	c	class:ActiveRecord.Associations
Calculations	lib/active_record/calculations.rb	/^  module Calculations #:nodoc:$/;"	m	class:ActiveRecord
Callbacks	lib/active_record/callbacks.rb	/^  module Callbacks$/;"	m	class:ActiveRecord
ClassMethods	lib/active_record/aggregations.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Aggregations
ClassMethods	lib/active_record/association_preload.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.AssociationPreload
ClassMethods	lib/active_record/associations.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Associations
ClassMethods	lib/active_record/attribute_methods.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods
ClassMethods	lib/active_record/autosave_association.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.AutosaveAssociation
ClassMethods	lib/active_record/batches.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Batches
ClassMethods	lib/active_record/calculations.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Calculations
ClassMethods	lib/active_record/dirty.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Dirty
ClassMethods	lib/active_record/fixtures.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.TestFixtures
ClassMethods	lib/active_record/locking/optimistic.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.Locking
ClassMethods	lib/active_record/named_scope.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.NamedScope
ClassMethods	lib/active_record/nested_attributes.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.NestedAttributes
ClassMethods	lib/active_record/observer.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Observing
ClassMethods	lib/active_record/query_cache.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.QueryCache
ClassMethods	lib/active_record/reflection.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Reflection
ClassMethods	lib/active_record/transactions.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Transactions
ClassMethods	lib/active_record/validations.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Validations
Column	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class Column$/;"	c	class:ActiveRecord.ConnectionAdapters
ColumnDefinition	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class ColumnDefinition < Struct.new(:base, :name, :type, :limit, :precision, :scale, :default, :null) #:nodoc:$/;"	c	class:ActiveRecord
ConfigurationError	lib/active_record/base.rb	/^  class ConfigurationError < ActiveRecordError$/;"	c	class:ActiveRecord
ConnectionAdapters	lib/active_record.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/database_limits.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/database_statements.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/query_cache.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/quoting.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^  module ConnectionAdapters #:nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract_adapter.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/mysql_adapter.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql_adapter.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^  module ConnectionAdapters #:nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/sqlite_adapter.rb	/^  module ConnectionAdapters #:nodoc:$/;"	m
ConnectionHandler	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^    class ConnectionHandler$/;"	c	class:ActiveRecord
ConnectionManagement	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^    class ConnectionManagement$/;"	c	class:ActiveRecord
ConnectionNotEstablished	lib/active_record/base.rb	/^  class ConnectionNotEstablished < ActiveRecordError$/;"	c	class:ActiveRecord
ConnectionPool	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^    class ConnectionPool$/;"	c	class:ActiveRecord.ConnectionAdapters
ConnectionSpecification	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^    class ConnectionSpecification #:nodoc:$/;"	c	class:ActiveRecord.Base
ConnectionTimeoutError	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^  class ConnectionTimeoutError < ConnectionNotEstablished$/;"	c	class:ActiveRecord
DangerousAttributeError	lib/active_record/base.rb	/^  class DangerousAttributeError < ActiveRecordError$/;"	c	class:ActiveRecord
DatabaseLimits	lib/active_record/connection_adapters/abstract/database_limits.rb	/^    module DatabaseLimits$/;"	m	class:ActiveRecord.ConnectionAdapters
DatabaseStatements	lib/active_record/connection_adapters/abstract/database_statements.rb	/^    module DatabaseStatements$/;"	m	class:ActiveRecord.ConnectionAdapters
DeprecatedSQLiteAdapter	lib/active_record/connection_adapters/sqlite_adapter.rb	/^    class DeprecatedSQLiteAdapter < SQLite2Adapter # :nodoc:$/;"	c
Dirty	lib/active_record/dirty.rb	/^  module Dirty$/;"	m	class:ActiveRecord
DuplicateMigrationNameError	lib/active_record/migration.rb	/^  class DuplicateMigrationNameError < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
DuplicateMigrationVersionError	lib/active_record/migration.rb	/^  class DuplicateMigrationVersionError < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
DynamicFinderMatch	lib/active_record/dynamic_finder_match.rb	/^  class DynamicFinderMatch$/;"	c	class:ActiveRecord
DynamicScopeMatch	lib/active_record/dynamic_scope_match.rb	/^  class DynamicScopeMatch$/;"	c	class:ActiveRecord
EagerLoadPolymorphicError	lib/active_record/associations.rb	/^  class EagerLoadPolymorphicError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
Error	lib/active_record/validations.rb	/^  class Error$/;"	c	class:ActiveRecord
Errors	lib/active_record/validations.rb	/^  class Errors$/;"	c	class:ActiveRecord.Error
Fixture	lib/active_record/fixtures.rb	/^class Fixture #:nodoc:$/;"	c
FixtureClassNotFound	lib/active_record/fixtures.rb	/^  class FixtureClassNotFound < ActiveRecord::ActiveRecordError #:nodoc:$/;"	c
FixtureClassNotFound	lib/active_record/fixtures.rb	/^  class FixtureClassNotFound < StandardError #:nodoc:$/;"	c
FixtureError	lib/active_record/fixtures.rb	/^  class FixtureError < StandardError #:nodoc:$/;"	c	class:Fixture
Fixtures	lib/active_record/fixtures.rb	/^class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)$/;"	c
Format	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      module Format$/;"	m	class:ActiveRecord.ConnectionAdapters.Column
FormatError	lib/active_record/fixtures.rb	/^  class FormatError < FixtureError #:nodoc:$/;"	c	class:Fixture
HabtmFixtures	lib/active_record/fixtures.rb	/^    class HabtmFixtures < ::Fixtures #:nodoc:$/;"	c	class:Fixtures
HasAndBelongsToManyAssociation	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^    class HasAndBelongsToManyAssociation < AssociationCollection #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasAndBelongsToManyAssociationForeignKeyNeeded	lib/active_record/associations.rb	/^  class HasAndBelongsToManyAssociationForeignKeyNeeded < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyAssociation	lib/active_record/associations/has_many_association.rb	/^    class HasManyAssociation < AssociationCollection #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasManyThroughAssociation	lib/active_record/associations/has_many_through_association.rb	/^    class HasManyThroughAssociation < HasManyAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasManyThroughAssociationNotFoundError	lib/active_record/associations.rb	/^  class HasManyThroughAssociationNotFoundError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughAssociationPointlessSourceTypeError	lib/active_record/associations.rb	/^  class HasManyThroughAssociationPointlessSourceTypeError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughAssociationPolymorphicError	lib/active_record/associations.rb	/^  class HasManyThroughAssociationPolymorphicError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughCantAssociateNewRecords	lib/active_record/associations.rb	/^  class HasManyThroughCantAssociateNewRecords < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughCantAssociateThroughHasOneOrManyReflection	lib/active_record/associations.rb	/^  class HasManyThroughCantAssociateThroughHasOneOrManyReflection < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughCantDissociateNewRecords	lib/active_record/associations.rb	/^  class HasManyThroughCantDissociateNewRecords < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughSourceAssociationMacroError	lib/active_record/associations.rb	/^  class HasManyThroughSourceAssociationMacroError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughSourceAssociationNotFoundError	lib/active_record/associations.rb	/^  class HasManyThroughSourceAssociationNotFoundError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasOneAssociation	lib/active_record/associations/has_one_association.rb	/^    class HasOneAssociation < BelongsToAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasOneThroughAssociation	lib/active_record/associations/has_one_through_association.rb	/^    class HasOneThroughAssociation < HasManyThroughAssociation$/;"	c	class:ActiveRecord.Associations
IllegalMigrationNameError	lib/active_record/migration.rb	/^  class IllegalMigrationNameError < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
IndexDefinition	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class IndexDefinition < Struct.new(:table, :name, :unique, :columns, :lengths) #:nodoc:$/;"	c	class:ActiveRecord
InnerJoinAssociation	lib/active_record/associations.rb	/^          class InnerJoinAssociation < JoinAssociation$/;"	c	class:InnerJoinDependency
InnerJoinDependency	lib/active_record/associations.rb	/^        class InnerJoinDependency < JoinDependency # :nodoc:$/;"	c
InverseOfAssociationNotFoundError	lib/active_record/associations.rb	/^  class InverseOfAssociationNotFoundError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
IrreversibleMigration	lib/active_record/migration.rb	/^  class IrreversibleMigration < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
JoinAssociation	lib/active_record/associations.rb	/^          class JoinAssociation < JoinBase # :nodoc:$/;"	c	class:JoinDependency.remove_duplicate_results!
JoinBase	lib/active_record/associations.rb	/^          class JoinBase # :nodoc:$/;"	c	class:JoinDependency.remove_duplicate_results!
JoinDependency	lib/active_record/associations.rb	/^        class JoinDependency # :nodoc:$/;"	c
Locking	lib/active_record.rb	/^  module Locking$/;"	m	class:ActiveRecord
Locking	lib/active_record/locking/optimistic.rb	/^  module Locking$/;"	m	class:ActiveRecord
Locking	lib/active_record/locking/pessimistic.rb	/^  module Locking$/;"	m	class:ActiveRecord
MacroReflection	lib/active_record/reflection.rb	/^    class MacroReflection$/;"	c	class:ActiveRecord.Reflection
MethodAttribute	lib/active_record/serializers/xml_serializer.rb	/^    class MethodAttribute < Attribute #:nodoc:$/;"	c	class:ActiveRecord
Migration	lib/active_record/migration.rb	/^  class Migration$/;"	c	class:ActiveRecord
MigrationProxy	lib/active_record/migration.rb	/^  class MigrationProxy$/;"	c
Migrator	lib/active_record/migration.rb	/^  class Migrator#:nodoc:$/;"	c
MissingAttributeError	lib/active_record/base.rb	/^  class MissingAttributeError < NoMethodError$/;"	c	class:ActiveRecord
MultiparameterAssignmentErrors	lib/active_record/base.rb	/^  class MultiparameterAssignmentErrors < ActiveRecordError$/;"	c	class:ActiveRecord
MysqlAdapter	lib/active_record/connection_adapters/mysql_adapter.rb	/^    class MysqlAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
MysqlColumn	lib/active_record/connection_adapters/mysql_adapter.rb	/^    class MysqlColumn < Column #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
MysqlCompat	lib/active_record/connection_adapters/mysql_adapter.rb	/^module MysqlCompat #:nodoc:$/;"	m
NamedScope	lib/active_record/named_scope.rb	/^  module NamedScope$/;"	m	class:ActiveRecord
NestedAttributes	lib/active_record/nested_attributes.rb	/^  module NestedAttributes #:nodoc:$/;"	m	class:ActiveRecord
Observer	lib/active_record/observer.rb	/^  class Observer$/;"	c	class:ActiveRecord
Observing	lib/active_record/observer.rb	/^  module Observing # :nodoc:$/;"	m	class:ActiveRecord
Omap	lib/active_record/fixtures.rb	/^    class Omap #:nodoc:$/;"	c	class:YAML
Optimistic	lib/active_record/locking/optimistic.rb	/^    module Optimistic$/;"	m	class:ActiveRecord.Locking
PGresult	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    class PGresult$/;"	c
Pessimistic	lib/active_record/locking/pessimistic.rb	/^    module Pessimistic$/;"	m	class:ActiveRecord.Locking
PostgreSQLAdapter	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    class PostgreSQLAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLColumn	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    class PostgreSQLColumn < Column #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
PreparedStatementInvalid	lib/active_record/base.rb	/^  class PreparedStatementInvalid < ActiveRecordError$/;"	c	class:ActiveRecord
QueryCache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^    module QueryCache$/;"	m	class:ActiveRecord.ConnectionAdapters
QueryCache	lib/active_record/query_cache.rb	/^  class QueryCache$/;"	c	class:ActiveRecord
Quoting	lib/active_record/connection_adapters/abstract/quoting.rb	/^    module Quoting$/;"	m	class:ActiveRecord.ConnectionAdapters
ReadOnlyAssociation	lib/active_record/associations.rb	/^  class ReadOnlyAssociation < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
ReadOnlyRecord	lib/active_record/base.rb	/^  class ReadOnlyRecord < ActiveRecordError$/;"	c	class:ActiveRecord
RecordInvalid	lib/active_record/validations.rb	/^  class RecordInvalid < ActiveRecordError$/;"	c	class:ActiveRecord
RecordNotFound	lib/active_record/base.rb	/^  class RecordNotFound < ActiveRecordError$/;"	c	class:ActiveRecord
RecordNotSaved	lib/active_record/base.rb	/^  class RecordNotSaved < ActiveRecordError$/;"	c	class:ActiveRecord
Reflection	lib/active_record/reflection.rb	/^  module Reflection # :nodoc:$/;"	m	class:ActiveRecord
Rollback	lib/active_record/base.rb	/^  class Rollback < ActiveRecordError$/;"	c	class:ActiveRecord
SQLite2Adapter	lib/active_record/connection_adapters/sqlite_adapter.rb	/^    class SQLite2Adapter < SQLiteAdapter # :nodoc:$/;"	c
SQLite3Adapter	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^    class SQLite3Adapter < SQLiteAdapter # :nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
SQLiteAdapter	lib/active_record/connection_adapters/sqlite_adapter.rb	/^    class SQLiteAdapter < AbstractAdapter$/;"	c
SQLiteColumn	lib/active_record/connection_adapters/sqlite_adapter.rb	/^    class SQLiteColumn < Column #:nodoc:$/;"	c	class:ConnectionAdapters
Schema	lib/active_record/schema.rb	/^  class Schema < Migration$/;"	c	class:ActiveRecord
SchemaDumper	lib/active_record/schema_dumper.rb	/^  class SchemaDumper #:nodoc:$/;"	c	class:ActiveRecord
SchemaStatements	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^    module SchemaStatements$/;"	m	class:ActiveRecord.ConnectionAdapters
Scope	lib/active_record/named_scope.rb	/^    class Scope$/;"	c	class:ActiveRecord.NamedScope
Serialization	lib/active_record/serialization.rb	/^  module Serialization$/;"	m	class:ActiveRecord
Serialization	lib/active_record/serializers/json_serializer.rb	/^  module Serialization$/;"	m	class:ActiveRecord
Serialization	lib/active_record/serializers/xml_serializer.rb	/^  module Serialization$/;"	m	class:ActiveRecord
SerializationTypeMismatch	lib/active_record/base.rb	/^  class SerializationTypeMismatch < ActiveRecordError$/;"	c	class:ActiveRecord
Serializer	lib/active_record/serialization.rb	/^    class Serializer #:nodoc:$/;"	c	class:ActiveRecord.Serialization
Session	lib/active_record/session_store.rb	/^    class Session < ActiveRecord::Base$/;"	c	class:ActiveRecord.SessionStore
SessionStore	lib/active_record/session_store.rb	/^  class SessionStore < ActionController::Session::AbstractStore$/;"	c	class:ActiveRecord
SqlBypass	lib/active_record/session_store.rb	/^    class SqlBypass$/;"	c	class:ActiveRecord
StaleObjectError	lib/active_record/base.rb	/^  class StaleObjectError < ActiveRecordError$/;"	c	class:ActiveRecord
StatementInvalid	lib/active_record/base.rb	/^  class StatementInvalid < ActiveRecordError$/;"	c	class:ActiveRecord
SubclassNotFound	lib/active_record/base.rb	/^  class SubclassNotFound < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
Table	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class Table$/;"	c
TableDefinition	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class TableDefinition$/;"	c	class:ActiveRecord
TableDefinition	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    class TableDefinition$/;"	c	class:ActiveRecord.ConnectionAdapters
TestCase	lib/active_record/test_case.rb	/^  class TestCase < ActiveSupport::TestCase #:nodoc:$/;"	c	class:ActiveRecord
TestFixtures	lib/active_record/fixtures.rb	/^  module TestFixtures$/;"	m	class:ActiveRecord
ThroughReflection	lib/active_record/reflection.rb	/^    class ThroughReflection < AssociationReflection #:nodoc:$/;"	c	class:ActiveRecord.Reflection
Timestamp	lib/active_record/timestamp.rb	/^  module Timestamp$/;"	m	class:ActiveRecord
TooManyRecords	lib/active_record/nested_attributes.rb	/^    class TooManyRecords < ActiveRecordError$/;"	c	class:ActiveRecord.NestedAttributes
TransactionError	lib/active_record/transactions.rb	/^    class TransactionError < ActiveRecordError # :nodoc:$/;"	c	class:ActiveRecord.Transactions
Transactions	lib/active_record/transactions.rb	/^  module Transactions$/;"	m	class:ActiveRecord
UnknownAttributeError	lib/active_record/base.rb	/^  class UnknownAttributeError < NoMethodError$/;"	c	class:ActiveRecord
UnknownMigrationVersionError	lib/active_record/migration.rb	/^  class UnknownMigrationVersionError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
VERSION	lib/active_record/version.rb	/^  module VERSION #:nodoc:$/;"	m	class:ActiveRecord
Validations	lib/active_record/validations.rb	/^  module Validations$/;"	m	class:ActiveRecord
Version	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      class Version$/;"	c	class:SQLiteAdapter
XmlSerializer	lib/active_record/serializers/xml_serializer.rb	/^  class XmlSerializer < ActiveRecord::Serialization::Serializer #:nodoc:$/;"	c	class:ActiveRecord
YAML	lib/active_record/fixtures.rb	/^  module YAML #:nodoc:$/;"	m
[]	lib/active_record/base.rb	/^      def [](attr_name)$/;"	f	class:sanitize_sql_hash_for_conditions
[]	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def [](name)$/;"	f	class:ActiveRecord.TableDefinition
[]	lib/active_record/fixtures.rb	/^  def [](key)$/;"	f	class:Fixture
[]=	lib/active_record/base.rb	/^      def []=(attr_name, value)$/;"	f	class:sanitize_sql_hash_for_conditions
_destroy	lib/active_record/nested_attributes.rb	/^    def _destroy$/;"	f	class:ActiveRecord
abstract_class?	lib/active_record/base.rb	/^      def abstract_class?$/;"	f	class:ActiveRecord.Base
accepts_nested_attributes_for	lib/active_record/nested_attributes.rb	/^      def accepts_nested_attributes_for(*attr_names)$/;"	f	class:ActiveRecord.NestedAttributes.ClassMethods
accessible_attributes	lib/active_record/base.rb	/^      def accessible_attributes # :nodoc:$/;"	f	class:ActiveRecord.Base
active?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
active?	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
active?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
adapter_name	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def adapter_name$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
adapter_name	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def adapter_name #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
adapter_name	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def adapter_name$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
adapter_name	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def adapter_name #:nodoc:$/;"	f	class:SQLiteAdapter
add	lib/active_record/validations.rb	/^    def add(attribute, message = nil, options = {})$/;"	f	class:ActiveRecord.Error
add_association_callbacks	lib/active_record/associations.rb	/^        def add_association_callbacks(association_name, options)$/;"	f
add_associations	lib/active_record/serializers/xml_serializer.rb	/^    def add_associations(association, records, opts)$/;"	f	class:ActiveRecord.XmlSerializer
add_attributes	lib/active_record/serializers/xml_serializer.rb	/^    def add_attributes$/;"	f	class:ActiveRecord.XmlSerializer
add_autosave_association_callbacks	lib/active_record/autosave_association.rb	/^      def add_autosave_association_callbacks(reflection)$/;"	f	class:ActiveRecord.AutosaveAssociation
add_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_column	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def add_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
add_column	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def add_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
add_column	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def add_column(table_name, column_name, type, options = {}) #:nodoc:$/;"	f
add_column_options!	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def add_column_options!(sql, options)$/;"	f	class:ActiveRecord.ColumnDefinition
add_column_options!	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_column_options!(sql, options) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
add_column_position!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def add_column_position!(sql, options)$/;"	f	class:ActiveRecord.ConnectionAdapters
add_conditions!	lib/active_record/base.rb	/^        def add_conditions!(sql, conditions, scope = :auto)$/;"	f	class:ActiveRecord.Base
add_counter_cache_callbacks	lib/active_record/associations.rb	/^        def add_counter_cache_callbacks(reflection)$/;"	f
add_group!	lib/active_record/base.rb	/^        def add_group!(sql, group, having, scope = :auto)$/;"	f	class:ActiveRecord.Base
add_includes	lib/active_record/serialization.rb	/^      def add_includes(&block)$/;"	f	class:ActiveRecord.Serialization.Serializer
add_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_index(table_name, column_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_joins!	lib/active_record/base.rb	/^        def add_joins!(sql, joins, scope = :auto)$/;"	f	class:ActiveRecord.Base
add_limit!	lib/active_record/base.rb	/^        def add_limit!(sql, options, scope = :auto)$/;"	f	class:ActiveRecord.Base
add_limit!	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def add_limit!(sql, options)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
add_limit_offset!	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def add_limit_offset!(sql, options)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
add_limit_offset!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def add_limit_offset!(sql, options) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
add_limited_ids_condition!	lib/active_record/associations.rb	/^        def add_limited_ids_condition!(sql, options, join_dependency)$/;"	f
add_lock!	lib/active_record/base.rb	/^        def add_lock!(sql, options, scope = :auto)$/;"	f	class:ActiveRecord.Base
add_lock!	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def add_lock!(sql, options)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
add_lock!	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def add_lock!(sql, options) #:nodoc:$/;"	f	class:SQLiteAdapter
add_observer!	lib/active_record/observer.rb	/^      def add_observer!(klass)$/;"	f	class:ActiveRecord
add_on_blank	lib/active_record/validations.rb	/^    def add_on_blank(attributes, custom_message = nil)$/;"	f	class:ActiveRecord.Error
add_on_empty	lib/active_record/validations.rb	/^    def add_on_empty(attributes, custom_message = nil)$/;"	f	class:ActiveRecord.Error
add_order!	lib/active_record/base.rb	/^        def add_order!(sql, order, scope = :auto)$/;"	f	class:ActiveRecord.Base
add_order_by_for_association_limiting!	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_order_by_for_association_limiting!(sql, options)$/;"	f	class:ActiveRecord.ConnectionAdapters
add_order_by_for_association_limiting!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def add_order_by_for_association_limiting!(sql, options) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
add_preloaded_record_to_collection	lib/active_record/association_preload.rb	/^      def add_preloaded_record_to_collection(parent_records, reflection_name, associated_record)$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
add_preloaded_records_to_collection	lib/active_record/association_preload.rb	/^      def add_preloaded_records_to_collection(parent_records, reflection_name, associated_record)$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
add_procs	lib/active_record/serializers/xml_serializer.rb	/^    def add_procs$/;"	f	class:ActiveRecord.XmlSerializer
add_record_to_target_with_callbacks	lib/active_record/associations/association_collection.rb	/^        def add_record_to_target_with_callbacks(record)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
add_tag	lib/active_record/serializers/xml_serializer.rb	/^    def add_tag(attribute)$/;"	f	class:ActiveRecord.XmlSerializer
add_timestamps	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_timestamps(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters
add_to_base	lib/active_record/validations.rb	/^    def add_to_base(msg)$/;"	f	class:ActiveRecord.Error
add_touch_callbacks	lib/active_record/associations.rb	/^        def add_touch_callbacks(reflection, touch_attribute)$/;"	f
after_create	lib/active_record/callbacks.rb	/^    def after_create() end$/;"	f	class:ActiveRecord.Callbacks
after_destroy	lib/active_record/callbacks.rb	/^    def after_destroy()  end$/;"	f	class:ActiveRecord.Callbacks
after_save	lib/active_record/callbacks.rb	/^    def after_save()  end$/;"	f	class:ActiveRecord.Callbacks
after_update	lib/active_record/callbacks.rb	/^    def after_update() end$/;"	f	class:ActiveRecord.Callbacks
after_validation	lib/active_record/callbacks.rb	/^    def after_validation() end$/;"	f	class:ActiveRecord.Callbacks
after_validation_on_create	lib/active_record/callbacks.rb	/^    def after_validation_on_create()  end$/;"	f	class:ActiveRecord.Callbacks
after_validation_on_update	lib/active_record/callbacks.rb	/^    def after_validation_on_update()  end$/;"	f	class:ActiveRecord.Callbacks
aggregate_mapping	lib/active_record/base.rb	/^        def aggregate_mapping(reflection)$/;"	f
alias_attribute_with_dirty	lib/active_record/dirty.rb	/^      def alias_attribute_with_dirty(new_name, old_name)$/;"	f	class:ActiveRecord.Dirty.ClassMethods
aliased_prefix	lib/active_record/associations.rb	/^            def aliased_prefix$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
aliased_primary_key	lib/active_record/associations.rb	/^            def aliased_primary_key$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
aliased_table_name	lib/active_record/associations.rb	/^            def aliased_table_name$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
aliased_table_name	lib/active_record/associations/association_proxy.rb	/^      def aliased_table_name$/;"	f	class:ActiveRecord.Associations.AssociationProxy
aliased_table_name_for	lib/active_record/associations.rb	/^              def aliased_table_name_for(name, suffix = nil)$/;"	f	class:JoinDependency.remove_duplicate_results!
all	lib/active_record/base.rb	/^      def all(*args)$/;"	f	class:ActiveRecord.Base
all_attributes_exists?	lib/active_record/base.rb	/^        def all_attributes_exists?(attribute_names)$/;"	f
all_hashes	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def all_hashes                                            # def all_hashes$/;"	f	class:MysqlCompat.define_all_hashes_method
all_hashes	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def all_hashes                     # def all_hashes$/;"	f	class:MysqlCompat.define_all_hashes_method
allow_concurrency	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def allow_concurrency$/;"	f	class:ActiveRecord.Base.establish_connection
allow_concurrency=	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def allow_concurrency=(flag)$/;"	f	class:ActiveRecord.Base.establish_connection
alter_table	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def alter_table(table_name, options = {}) #:nodoc:$/;"	f
announce	lib/active_record/migration.rb	/^      def announce(message)$/;"	f	class:ActiveRecord.Migration
any?	lib/active_record/associations/association_collection.rb	/^      def any?$/;"	f	class:ActiveRecord.Associations.AssociationCollection
any?	lib/active_record/named_scope.rb	/^      def any?$/;"	f	class:ActiveRecord.NamedScope.Scope
append_conditions	lib/active_record/association_preload.rb	/^      def append_conditions(reflection, preload_options)$/;"	f	class:ActiveRecord.AssociationPreload
array_of_strings?	lib/active_record/base.rb	/^        def array_of_strings?(o)$/;"	f	class:ActiveRecord.Base
as_json	lib/active_record/serializers/json_serializer.rb	/^    def as_json(options = nil) #:nodoc:$/;"	f	class:ActiveRecord.Serialization
assert_date_from_db	lib/active_record/test_case.rb	/^    def assert_date_from_db(expected, actual, message = nil)$/;"	f	class:ActiveRecord.TestCase
assert_no_queries	lib/active_record/test_case.rb	/^    def assert_no_queries(&block)$/;"	f	class:ActiveRecord.TestCase
assert_queries	lib/active_record/test_case.rb	/^    def assert_queries(num = 1)$/;"	f	class:ActiveRecord.TestCase
assert_sql	lib/active_record/test_case.rb	/^    def assert_sql(*patterns_to_match)$/;"	f	class:ActiveRecord.TestCase
assign_attributes	lib/active_record/base.rb	/^      def assign_attributes(attributes={})$/;"	f	class:sanitize_sql_hash_for_conditions
assign_multiparameter_attributes	lib/active_record/base.rb	/^      def assign_multiparameter_attributes(pairs)$/;"	f
assign_nested_attributes_for_collection_association	lib/active_record/nested_attributes.rb	/^    def assign_nested_attributes_for_collection_association(association_name, attributes_collection)$/;"	f	class:ActiveRecord
assign_nested_attributes_for_one_to_one_association	lib/active_record/nested_attributes.rb	/^    def assign_nested_attributes_for_one_to_one_association(association_name, attributes)$/;"	f	class:ActiveRecord
assign_to_or_mark_for_destruction	lib/active_record/nested_attributes.rb	/^    def assign_to_or_mark_for_destruction(record, attributes, allow_destroy)$/;"	f
associated_records_to_validate_or_save	lib/active_record/autosave_association.rb	/^    def associated_records_to_validate_or_save(association, new_record, autosave)$/;"	f	class:ActiveRecord
association_accessor_methods	lib/active_record/associations.rb	/^        def association_accessor_methods(reflection, association_proxy_class)$/;"	f	class:ActiveRecord.Associations.ClassMethods
association_class	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def association_class$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
association_constructor_method	lib/active_record/associations.rb	/^        def association_constructor_method(constructor, reflection, association_proxy_class)$/;"	f
association_foreign_key	lib/active_record/reflection.rb	/^      def association_foreign_key$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
association_instance_get	lib/active_record/associations.rb	/^      def association_instance_get(name)$/;"	f	class:ActiveRecord.Associations
association_instance_set	lib/active_record/associations.rb	/^      def association_instance_set(name, association)$/;"	f	class:ActiveRecord.Associations
association_join	lib/active_record/associations.rb	/^            def association_join$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinAssociation
association_valid?	lib/active_record/autosave_association.rb	/^    def association_valid?(reflection, association)$/;"	f	class:ActiveRecord
assume_migrated_upto_version	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def assume_migrated_upto_version(version, migrations_path = ActiveRecord::Migrator.migrations_path)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
attr_accessible	lib/active_record/base.rb	/^      def attr_accessible(*attributes)$/;"	f	class:ActiveRecord.Base
attr_protected	lib/active_record/base.rb	/^      def attr_protected(*attributes)$/;"	f	class:ActiveRecord.Base
attr_readonly	lib/active_record/base.rb	/^       def attr_readonly(*attributes)$/;"	f	class:ActiveRecord.Base
attribute=	lib/active_record/attribute_methods.rb	/^      def attribute=(attribute_name, value)$/;"	f
attribute?	lib/active_record/attribute_methods.rb	/^      def attribute?(attribute_name)$/;"	f
attribute_before_type_cast	lib/active_record/attribute_methods.rb	/^      def attribute_before_type_cast(attribute_name)$/;"	f
attribute_change	lib/active_record/dirty.rb	/^      def attribute_change(attr)$/;"	f	class:ActiveRecord.Dirty
attribute_changed?	lib/active_record/dirty.rb	/^      def attribute_changed?(attr)$/;"	f	class:ActiveRecord.Dirty
attribute_condition	lib/active_record/base.rb	/^        def attribute_condition(quoted_column_name, argument)$/;"	f
attribute_for_inspect	lib/active_record/base.rb	/^      def attribute_for_inspect(attr_name)$/;"	f	class:sanitize_sql_hash_for_conditions
attribute_method_suffix	lib/active_record/attribute_methods.rb	/^      def attribute_method_suffix(*suffixes)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
attribute_method_suffixes	lib/active_record/attribute_methods.rb	/^        def attribute_method_suffixes$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
attribute_names	lib/active_record/base.rb	/^      def attribute_names$/;"	f	class:sanitize_sql_hash_for_conditions
attribute_present?	lib/active_record/base.rb	/^      def attribute_present?(attribute)$/;"	f	class:sanitize_sql_hash_for_conditions
attribute_was	lib/active_record/dirty.rb	/^      def attribute_was(attr)$/;"	f	class:ActiveRecord.Dirty
attribute_will_change!	lib/active_record/dirty.rb	/^      def attribute_will_change!(attr)$/;"	f	class:ActiveRecord.Dirty
attributes	lib/active_record/base.rb	/^      def attributes$/;"	f	class:sanitize_sql_hash_for_conditions
attributes=	lib/active_record/base.rb	/^      def attributes=(new_attributes, guard_protected_attributes = true)$/;"	f	class:sanitize_sql_hash_for_conditions
attributes_before_type_cast	lib/active_record/base.rb	/^      def attributes_before_type_cast$/;"	f	class:sanitize_sql_hash_for_conditions
attributes_from_column_definition	lib/active_record/base.rb	/^      def attributes_from_column_definition$/;"	f
attributes_from_column_definition_with_lock	lib/active_record/locking/optimistic.rb	/^        def attributes_from_column_definition_with_lock$/;"	f	class:ActiveRecord.Locking
attributes_protected_by_default	lib/active_record/base.rb	/^      def attributes_protected_by_default$/;"	f
attributes_with_quotes	lib/active_record/base.rb	/^      def attributes_with_quotes(include_primary_key = true, include_readonly_attributes = true, attribute_names = @attributes.keys)$/;"	f
average	lib/active_record/calculations.rb	/^      def average(column_name, options = {})$/;"	f	class:ActiveRecord.Calculations.ClassMethods
bang?	lib/active_record/dynamic_finder_match.rb	/^    def bang?$/;"	f	class:ActiveRecord.DynamicFinderMatch
base_class	lib/active_record/base.rb	/^      def base_class$/;"	f	class:ActiveRecord.Base
batch_order	lib/active_record/batches.rb	/^        def batch_order$/;"	f	class:ActiveRecord.Batches.ClassMethods
becomes	lib/active_record/base.rb	/^      def becomes(klass)$/;"	f	class:sanitize_sql_hash_for_conditions
before_create	lib/active_record/callbacks.rb	/^    def before_create() end$/;"	f	class:ActiveRecord.Callbacks
before_destroy	lib/active_record/callbacks.rb	/^    def before_destroy() end$/;"	f	class:ActiveRecord.Callbacks
before_save	lib/active_record/callbacks.rb	/^    def before_save() end$/;"	f	class:ActiveRecord.Callbacks
before_save_collection_association	lib/active_record/autosave_association.rb	/^    def before_save_collection_association$/;"	f	class:ActiveRecord
before_update	lib/active_record/callbacks.rb	/^    def before_update() end$/;"	f	class:ActiveRecord.Callbacks
before_validation	lib/active_record/callbacks.rb	/^    def before_validation() end$/;"	f	class:ActiveRecord.Callbacks
before_validation_on_create	lib/active_record/callbacks.rb	/^    def before_validation_on_create() end$/;"	f	class:ActiveRecord.Callbacks
before_validation_on_update	lib/active_record/callbacks.rb	/^    def before_validation_on_update() end$/;"	f	class:ActiveRecord.Callbacks
begin_db_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def begin_db_transaction()    end$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
begin_db_transaction	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def begin_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
begin_db_transaction	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def begin_db_transaction$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
begin_db_transaction	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def begin_db_transaction #:nodoc:$/;"	f	class:SQLiteAdapter
belongs_to	lib/active_record/associations.rb	/^      def belongs_to(association_id, options = {})$/;"	f	class:ActiveRecord.Associations.ClassMethods
belongs_to?	lib/active_record/reflection.rb	/^      def belongs_to?$/;"	f	class:ActiveRecord.Reflection.MacroReflection
benchmark	lib/active_record/base.rb	/^      def benchmark(title, log_level = Logger::DEBUG, use_silence = true)$/;"	f	class:ActiveRecord.Base
binary_to_string	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def binary_to_string(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
binary_to_string	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def binary_to_string(value)$/;"	f	class:ConnectionAdapters.SQLiteColumn
build	lib/active_record/associations.rb	/^            def build(associations, parent = nil)$/;"	f	class:JoinDependency.remove_duplicate_results!
build	lib/active_record/associations/association_collection.rb	/^      def build(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
build	lib/active_record/associations/belongs_to_association.rb	/^      def build(attributes = {})$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
build	lib/active_record/associations/has_one_association.rb	/^      def build(attrs = {}, replace_existing = true)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
build_association	lib/active_record/reflection.rb	/^      def build_association(*options)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
build_conditions	lib/active_record/associations/has_many_through_association.rb	/^        def build_conditions$/;"	f	class:ActiveRecord.Associations
build_join_association	lib/active_record/associations.rb	/^            def build_join_association(reflection, parent)$/;"	f	class:InnerJoinDependency
build_join_association	lib/active_record/associations.rb	/^            def build_join_association(reflection, parent)$/;"	f	class:JoinDependency.remove_duplicate_results!
build_record	lib/active_record/associations/association_collection.rb	/^        def build_record(attrs)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
build_sti_condition	lib/active_record/associations/has_many_through_association.rb	/^        def build_sti_condition$/;"	f	class:ActiveRecord.Associations
build_through_conditions	lib/active_record/associations/has_many_through_association.rb	/^        def build_through_conditions$/;"	f	class:ActiveRecord.Associations
builder	lib/active_record/serializers/xml_serializer.rb	/^    def builder$/;"	f	class:ActiveRecord.XmlSerializer
cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def cache$/;"	f	class:ActiveRecord
cache	lib/active_record/query_cache.rb	/^      def cache(&block)$/;"	f	class:ActiveRecord.QueryCache.ClassMethods
cache_attribute?	lib/active_record/attribute_methods.rb	/^      def cache_attribute?(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
cache_attributes	lib/active_record/attribute_methods.rb	/^      def cache_attributes(*attribute_names)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
cache_fixtures	lib/active_record/fixtures.rb	/^  def self.cache_fixtures(connection, fixtures_map)$/;"	F	class:Fixtures
cache_for_connection	lib/active_record/fixtures.rb	/^  def self.cache_for_connection(connection)$/;"	F	class:Fixtures
cache_key	lib/active_record/base.rb	/^      def cache_key$/;"	f	class:sanitize_sql_hash_for_conditions
cache_sql	lib/active_record/connection_adapters/abstract/query_cache.rb	/^        def cache_sql(sql)$/;"	f	class:ActiveRecord
cached_attributes	lib/active_record/attribute_methods.rb	/^      def cached_attributes$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
cached_counter_attribute_name	lib/active_record/associations/has_many_association.rb	/^        def cached_counter_attribute_name$/;"	f	class:ActiveRecord.Associations
cached_counter_attribute_name	lib/active_record/associations/has_many_through_association.rb	/^        def cached_counter_attribute_name$/;"	f	class:ActiveRecord.Associations
cached_fixtures	lib/active_record/fixtures.rb	/^  def self.cached_fixtures(connection, keys_to_fetch = nil)$/;"	F	class:Fixtures
calculate	lib/active_record/calculations.rb	/^      def calculate(operation, column_name, options = {})$/;"	f	class:ActiveRecord.Calculations.ClassMethods
call	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def call(env)$/;"	f	class:ActiveRecord.ConnectionManagement
call	lib/active_record/query_cache.rb	/^    def call(env)$/;"	f	class:ActiveRecord.QueryCache
call_reject_if	lib/active_record/nested_attributes.rb	/^    def call_reject_if(association_name, attributes)$/;"	f
callback	lib/active_record/associations/association_collection.rb	/^        def callback(method, record)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
callback	lib/active_record/callbacks.rb	/^      def callback(method)$/;"	f	class:ActiveRecord.Callbacks
callbacks_for	lib/active_record/associations/association_collection.rb	/^        def callbacks_for(callback_name)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
camelize?	lib/active_record/serializers/xml_serializer.rb	/^    def camelize?$/;"	f	class:ActiveRecord.XmlSerializer
case_sensitive_equality_operator	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def case_sensitive_equality_operator$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
case_sensitive_equality_operator	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def case_sensitive_equality_operator$/;"	f	class:ActiveRecord.ConnectionAdapters
catch_schema_changes	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def catch_schema_changes$/;"	f
change	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def change(column_name, type, options = {})$/;"	f	class:Table
change_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def change_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
change_column	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def change_column(table_name, column_name, type, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
change_column	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def change_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
change_column	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def change_column(table_name, column_name, type, options = {}) #:nodoc:$/;"	f
change_column_default	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def change_column_default(table_name, column_name, default)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
change_column_default	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def change_column_default(table_name, column_name, default) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
change_column_default	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def change_column_default(table_name, column_name, default)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
change_column_default	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def change_column_default(table_name, column_name, default) #:nodoc:$/;"	f
change_column_null	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def change_column_null(table_name, column_name, null, default = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters
change_column_null	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def change_column_null(table_name, column_name, null, default = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
change_column_null	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def change_column_null(table_name, column_name, null, default = nil)$/;"	f
change_default	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def change_default(column_name, default)$/;"	f	class:Table
change_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def change_table(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
changed	lib/active_record/dirty.rb	/^    def changed$/;"	f	class:ActiveRecord.Dirty
changed?	lib/active_record/dirty.rb	/^    def changed?$/;"	f	class:ActiveRecord.Dirty
changed_attributes	lib/active_record/dirty.rb	/^      def changed_attributes$/;"	f	class:ActiveRecord.Dirty
changed_for_autosave?	lib/active_record/autosave_association.rb	/^    def changed_for_autosave?$/;"	f	class:ActiveRecord
changes	lib/active_record/dirty.rb	/^    def changes$/;"	f	class:ActiveRecord.Dirty
charset	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def charset$/;"	f	class:ActiveRecord.ConnectionAdapters
check_validity!	lib/active_record/reflection.rb	/^      def check_validity!$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
check_validity!	lib/active_record/reflection.rb	/^      def check_validity!$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
check_validity_of_inverse!	lib/active_record/reflection.rb	/^      def check_validity_of_inverse!$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
checkin	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkin(conn)$/;"	f	class:ActiveRecord.ConnectionAdapters
checkout	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkout$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
checkout_and_verify	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkout_and_verify(c)$/;"	f	class:ActiveRecord.ConnectionAdapters
checkout_existing_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkout_existing_connection$/;"	f	class:ActiveRecord.ConnectionAdapters
checkout_new_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkout_new_connection$/;"	f	class:ActiveRecord.ConnectionAdapters
class_name	lib/active_record/base.rb	/^      def class_name(table_name = table_name) # :nodoc:$/;"	f	class:ActiveRecord.Base
class_name	lib/active_record/fixtures.rb	/^  def class_name$/;"	f	class:Fixture
class_name	lib/active_record/reflection.rb	/^      def class_name$/;"	f	class:ActiveRecord.Reflection.MacroReflection
class_name_of_active_record_descendant	lib/active_record/base.rb	/^        def class_name_of_active_record_descendant(klass) #:nodoc:$/;"	f
class_of_active_record_descendant	lib/active_record/base.rb	/^        def class_of_active_record_descendant(klass)$/;"	f
clear	lib/active_record/associations/association_collection.rb	/^      def clear$/;"	f	class:ActiveRecord.Associations.AssociationCollection
clear	lib/active_record/validations.rb	/^    def clear$/;"	f	class:ActiveRecord.Error
clear_active_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_active_connections!$/;"	f	class:ActiveRecord.ConnectionHandler
clear_aggregation_cache	lib/active_record/aggregations.rb	/^    def clear_aggregation_cache #:nodoc:$/;"	f	class:ActiveRecord.Aggregations
clear_all_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_all_connections!$/;"	f	class:ActiveRecord.ConnectionHandler
clear_association_cache	lib/active_record/associations.rb	/^    def clear_association_cache #:nodoc:$/;"	f	class:ActiveRecord.Associations
clear_query_cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def clear_query_cache$/;"	f	class:ActiveRecord
clear_reloadable_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_reloadable_connections!$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
clear_reloadable_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_reloadable_connections!$/;"	f	class:ActiveRecord.ConnectionHandler
clear_stale_cached_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_stale_cached_connections!$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
client_min_messages	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def client_min_messages$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
client_min_messages=	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def client_min_messages=(level)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
clone	lib/active_record/base.rb	/^      def clone$/;"	f	class:sanitize_sql_hash_for_conditions
clone_attribute_value	lib/active_record/base.rb	/^      def clone_attribute_value(reader_method, attribute_name)$/;"	f
clone_attributes	lib/active_record/base.rb	/^      def clone_attributes(reader_method = :read_attribute, attributes = {})$/;"	f
collation	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def collation$/;"	f	class:ActiveRecord.ConnectionAdapters
collection?	lib/active_record/reflection.rb	/^      def collection?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
collection_accessor_methods	lib/active_record/associations.rb	/^        def collection_accessor_methods(reflection, association_proxy_class, writer = true)$/;"	f
collection_reader_method	lib/active_record/associations.rb	/^        def collection_reader_method(reflection, association_proxy_class)$/;"	f
column	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def column(column_name, type, options = {})$/;"	f	class:Table
column	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def column(name, type, options = {})$/;"	f	class:ActiveRecord.TableDefinition
column_alias_for	lib/active_record/calculations.rb	/^        def column_alias_for(*keys)$/;"	f	class:ActiveRecord.Calculations.ClassMethods
column_aliases	lib/active_record/associations.rb	/^        def column_aliases(join_dependency)$/;"	f
column_definitions	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def column_definitions(table_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
column_for	lib/active_record/calculations.rb	/^        def column_for(field)$/;"	f	class:ActiveRecord.Calculations.ClassMethods
column_for	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def column_for(table_name, column_name)$/;"	f	class:ActiveRecord
column_for_attribute	lib/active_record/base.rb	/^      def column_for_attribute(name)$/;"	f	class:sanitize_sql_hash_for_conditions
column_methods_hash	lib/active_record/base.rb	/^      def column_methods_hash #:nodoc:$/;"	f	class:ActiveRecord.Base
column_name_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def column_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
column_names	lib/active_record/base.rb	/^      def column_names$/;"	f	class:ActiveRecord.Base
column_names	lib/active_record/fixtures.rb	/^    def column_names$/;"	f	class:Fixtures
column_names_with_alias	lib/active_record/associations.rb	/^            def column_names_with_alias$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
columns	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def columns$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
columns	lib/active_record/base.rb	/^      def columns$/;"	f	class:ActiveRecord.Base
columns	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def columns(table_name, name = nil) end$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
columns	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def columns(table_name, name = nil)#:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
columns	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def columns(table_name, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
columns	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def columns(table_name, name = nil) #:nodoc:$/;"	f	class:SQLiteAdapter
columns	lib/active_record/reflection.rb	/^      def columns(tbl_name, log_msg)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
columns_hash	lib/active_record/base.rb	/^      def columns_hash$/;"	f	class:ActiveRecord.Base
columns_per_multicolumn_index	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def columns_per_multicolumn_index$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
columns_per_table	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def columns_per_table$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
columns_with_query_cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def columns_with_query_cache(*args)$/;"	f	class:ActiveRecord
comma_pair_list	lib/active_record/base.rb	/^      def comma_pair_list(hash)$/;"	f
commit_db_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def commit_db_transaction()   end$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
commit_db_transaction	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def commit_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
commit_db_transaction	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def commit_db_transaction$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
commit_db_transaction	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def commit_db_transaction #:nodoc:$/;"	f	class:SQLiteAdapter
composed_of	lib/active_record/aggregations.rb	/^      def composed_of(part_id, options = {}, &block)$/;"	f	class:ActiveRecord.Aggregations.ClassMethods
compute_type	lib/active_record/base.rb	/^        def compute_type(type_name)$/;"	f
compute_type	lib/active_record/serializers/xml_serializer.rb	/^        def compute_type$/;"	f	class:ActiveRecord.MethodAttribute
compute_type	lib/active_record/serializers/xml_serializer.rb	/^        def compute_type$/;"	f	class:ActiveRecord.XmlSerializer.Attribute
compute_value	lib/active_record/serializers/xml_serializer.rb	/^        def compute_value$/;"	f	class:ActiveRecord.XmlSerializer
condition_word	lib/active_record/associations.rb	/^        def condition_word(sql)$/;"	f
conditions	lib/active_record/associations/association_proxy.rb	/^      def conditions$/;"	f	class:ActiveRecord.Associations.AssociationProxy
conditions	lib/active_record/associations/has_many_through_association.rb	/^        def conditions$/;"	f	class:ActiveRecord.Associations
conditions_tables	lib/active_record/associations.rb	/^        def conditions_tables(options)$/;"	f
configure_connection	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def configure_connection$/;"	f	class:ActiveRecord
configure_connection	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def configure_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
configure_dependency_for_belongs_to	lib/active_record/associations.rb	/^        def configure_dependency_for_belongs_to(reflection)$/;"	f
configure_dependency_for_has_many	lib/active_record/associations.rb	/^        def configure_dependency_for_has_many(reflection, extra_conditions = nil)$/;"	f
configure_dependency_for_has_one	lib/active_record/associations.rb	/^        def configure_dependency_for_has_one(reflection)$/;"	f
connect	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def connect$/;"	f	class:ActiveRecord
connect	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def connect$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
connected?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connected?$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
connected?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connected?(klass)$/;"	f	class:ActiveRecord.ConnectionHandler
connected?	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def connected?$/;"	f	class:ActiveRecord.Base.establish_connection
connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connection$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
connection	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def connection$/;"	f	class:ActiveRecord.Base.establish_connection
connection	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^    def connection$/;"	f	class:ActiveRecord.Base
connection	lib/active_record/migration.rb	/^      def connection$/;"	f	class:ActiveRecord.Migration
connection	lib/active_record/session_store.rb	/^        def connection$/;"	f	class:ActiveRecord.SqlBypass
connection_allow_concurrency_setup	lib/active_record/test_case.rb	/^    def connection_allow_concurrency_setup$/;"	f	class:ActiveRecord.TestCase
connection_allow_concurrency_teardown	lib/active_record/test_case.rb	/^    def connection_allow_concurrency_teardown$/;"	f	class:ActiveRecord.TestCase
connection_pool	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def connection_pool$/;"	f	class:ActiveRecord.Base.establish_connection
connection_pools	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connection_pools$/;"	f	class:ActiveRecord.ConnectionHandler
construct	lib/active_record/associations.rb	/^            def construct(parent, associations, joins, row)$/;"	f	class:JoinDependency.remove_duplicate_results!
construct_association	lib/active_record/associations.rb	/^            def construct_association(record, join, row)$/;"	f	class:JoinDependency.remove_duplicate_results!
construct_attributes_from_arguments	lib/active_record/base.rb	/^        def construct_attributes_from_arguments(attribute_names, arguments)$/;"	f
construct_calculation_sql	lib/active_record/calculations.rb	/^        def construct_calculation_sql(operation, column_name, options) #:nodoc:$/;"	f	class:ActiveRecord.Calculations.ClassMethods
construct_conditions	lib/active_record/associations/has_many_through_association.rb	/^        def construct_conditions$/;"	f	class:ActiveRecord.Associations
construct_count_options_from_args	lib/active_record/calculations.rb	/^        def construct_count_options_from_args(*args)$/;"	f	class:ActiveRecord.Calculations.ClassMethods
construct_find_options!	lib/active_record/associations/association_collection.rb	/^        def construct_find_options!(options)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
construct_find_options!	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def construct_find_options!(options)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
construct_find_options!	lib/active_record/associations/has_many_through_association.rb	/^        def construct_find_options!(options)$/;"	f	class:ActiveRecord.Associations
construct_finder_sql	lib/active_record/base.rb	/^        def construct_finder_sql(options)$/;"	f	class:ActiveRecord.Base
construct_finder_sql_for_association_limiting	lib/active_record/associations.rb	/^        def construct_finder_sql_for_association_limiting(options, join_dependency)$/;"	f
construct_finder_sql_with_included_associations	lib/active_record/associations.rb	/^        def construct_finder_sql_with_included_associations(options, join_dependency)$/;"	f
construct_from	lib/active_record/associations/has_many_through_association.rb	/^        def construct_from$/;"	f	class:ActiveRecord.Associations
construct_id_map	lib/active_record/association_preload.rb	/^      def construct_id_map(records, primary_key=nil)$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
construct_join_attributes	lib/active_record/associations/has_many_through_association.rb	/^        def construct_join_attributes(associate)$/;"	f	class:ActiveRecord.Associations
construct_joins	lib/active_record/associations/has_many_through_association.rb	/^        def construct_joins(custom_joins = nil)$/;"	f	class:ActiveRecord.Associations
construct_owner_attributes	lib/active_record/associations/has_many_through_association.rb	/^        def construct_owner_attributes(reflection)$/;"	f	class:ActiveRecord.Associations
construct_quoted_owner_attributes	lib/active_record/associations/has_many_through_association.rb	/^        def construct_quoted_owner_attributes(reflection)$/;"	f	class:ActiveRecord.Associations
construct_scope	lib/active_record/associations/association_collection.rb	/^        def construct_scope$/;"	f	class:ActiveRecord.Associations.AssociationCollection
construct_scope	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def construct_scope$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
construct_scope	lib/active_record/associations/has_many_association.rb	/^        def construct_scope$/;"	f	class:ActiveRecord.Associations
construct_scope	lib/active_record/associations/has_many_through_association.rb	/^        def construct_scope$/;"	f	class:ActiveRecord.Associations
construct_scope	lib/active_record/associations/has_one_association.rb	/^        def construct_scope$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
construct_select	lib/active_record/associations/has_many_through_association.rb	/^        def construct_select(custom_select = nil)$/;"	f	class:ActiveRecord.Associations
construct_sql	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def construct_sql$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
construct_sql	lib/active_record/associations/has_many_association.rb	/^        def construct_sql$/;"	f	class:ActiveRecord.Associations
construct_sql	lib/active_record/associations/has_many_through_association.rb	/^        def construct_sql$/;"	f	class:ActiveRecord.Associations
construct_sql	lib/active_record/associations/has_one_association.rb	/^        def construct_sql$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
content_columns	lib/active_record/base.rb	/^      def content_columns$/;"	f	class:ActiveRecord.Base
convert_number_column_value	lib/active_record/base.rb	/^      def convert_number_column_value(value)$/;"	f
copy_table	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def copy_table(from, to, options = {}) #:nodoc:$/;"	f
copy_table_contents	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def copy_table_contents(from, to, columns, rename = {}) #:nodoc:$/;"	f
copy_table_indexes	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def copy_table_indexes(from, to, rename = {}) #:nodoc:$/;"	f
count	lib/active_record/associations/association_collection.rb	/^      def count(*args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
count	lib/active_record/calculations.rb	/^      def count(*args)$/;"	f	class:ActiveRecord.Calculations.ClassMethods
count_by_sql	lib/active_record/base.rb	/^      def count_by_sql(sql)$/;"	f	class:ActiveRecord.Base
count_records	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def count_records$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
count_records	lib/active_record/associations/has_many_association.rb	/^        def count_records$/;"	f	class:ActiveRecord.Associations.HasManyAssociation
counter_cache_column	lib/active_record/reflection.rb	/^      def counter_cache_column$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
create	lib/active_record/associations/association_collection.rb	/^      def create(attrs = {})$/;"	f	class:ActiveRecord.Associations.AssociationCollection
create	lib/active_record/associations/belongs_to_association.rb	/^      def create(attributes = {})$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
create	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def create(attributes = {})$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
create	lib/active_record/associations/has_many_through_association.rb	/^      def create(attrs = nil)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
create	lib/active_record/associations/has_one_association.rb	/^      def create(attrs = {}, replace_existing = true)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
create	lib/active_record/base.rb	/^      def create$/;"	f	class:sanitize_sql_hash_for_conditions
create	lib/active_record/base.rb	/^      def create(attributes = nil, &block)$/;"	f	class:ActiveRecord.Base
create!	lib/active_record/associations/association_collection.rb	/^      def create!(attrs = {})$/;"	f	class:ActiveRecord.Associations.AssociationCollection
create!	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def create!(attributes = {})$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
create!	lib/active_record/associations/has_many_through_association.rb	/^      def create!(attrs = nil)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
create!	lib/active_record/associations/has_one_association.rb	/^      def create!(attrs = {}, replace_existing = true)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
create!	lib/active_record/validations.rb	/^      def create!(attributes = nil, &block)$/;"	f	class:ActiveRecord.Validations.ClassMethods
create_association	lib/active_record/reflection.rb	/^      def create_association(*options)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
create_association!	lib/active_record/reflection.rb	/^      def create_association!(*options)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
create_belongs_to_reflection	lib/active_record/associations.rb	/^        def create_belongs_to_reflection(association_id, options)$/;"	f
create_database	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def create_database(name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
create_database	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def create_database(name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
create_extension_modules	lib/active_record/associations.rb	/^        def create_extension_modules(association_id, block_extension, extensions)$/;"	f
create_fixtures	lib/active_record/fixtures.rb	/^  def self.create_fixtures(fixtures_directory, table_names, class_names = {})$/;"	F	class:Fixtures
create_has_and_belongs_to_many_reflection	lib/active_record/associations.rb	/^        def create_has_and_belongs_to_many_reflection(association_id, options, &extension)$/;"	f
create_has_many_reflection	lib/active_record/associations.rb	/^        def create_has_many_reflection(association_id, options, &extension)$/;"	f
create_has_one_reflection	lib/active_record/associations.rb	/^        def create_has_one_reflection(association_id, options)$/;"	f
create_has_one_through_reflection	lib/active_record/associations.rb	/^        def create_has_one_through_reflection(association_id, options)$/;"	f
create_or_update	lib/active_record/base.rb	/^      def create_or_update$/;"	f	class:sanitize_sql_hash_for_conditions
create_or_update_with_callbacks	lib/active_record/callbacks.rb	/^    def create_or_update_with_callbacks #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
create_record	lib/active_record/associations/association_collection.rb	/^        def create_record(attrs)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
create_record	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def create_record(attributes, &block)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
create_reflection	lib/active_record/reflection.rb	/^      def create_reflection(macro, name, options, active_record)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
create_savepoint	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def create_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
create_savepoint	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def create_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
create_savepoint	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def create_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
create_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def create_table(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
create_table	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def create_table(table_name, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
create_table!	lib/active_record/session_store.rb	/^        def create_table!$/;"	f	class:ActiveRecord.SessionStore.Session
create_table!	lib/active_record/session_store.rb	/^        def create_table!$/;"	f	class:ActiveRecord.SqlBypass
create_through_record	lib/active_record/associations/has_one_through_association.rb	/^      def create_through_record(new_value) #nodoc:$/;"	f	class:ActiveRecord.Associations.HasOneThroughAssociation
create_time_zone_conversion_attribute?	lib/active_record/attribute_methods.rb	/^        def create_time_zone_conversion_attribute?(name, column)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
create_with_callbacks	lib/active_record/callbacks.rb	/^    def create_with_callbacks #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
create_with_timestamps	lib/active_record/timestamp.rb	/^      def create_with_timestamps #:nodoc:$/;"	f	class:ActiveRecord.Timestamp
csv_file_path	lib/active_record/fixtures.rb	/^    def csv_file_path$/;"	f
current_connection_id	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def current_connection_id #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
current_database	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def current_database$/;"	f	class:ActiveRecord.ConnectionAdapters
current_database	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def current_database$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
current_migration	lib/active_record/migration.rb	/^    def current_migration$/;"	f
current_savepoint_name	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def current_savepoint_name$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
current_scoped_methods	lib/active_record/base.rb	/^        def current_scoped_methods #:nodoc:$/;"	f
current_time_from_proper_timezone	lib/active_record/timestamp.rb	/^      def current_time_from_proper_timezone$/;"	f	class:ActiveRecord.Timestamp
current_version	lib/active_record/migration.rb	/^      def current_version$/;"	f	class:Migrator
current_version	lib/active_record/migration.rb	/^    def current_version$/;"	f
dasherize?	lib/active_record/serializers/xml_serializer.rb	/^    def dasherize?$/;"	f	class:ActiveRecord.XmlSerializer
data	lib/active_record/session_store.rb	/^      def data$/;"	f	class:ActiveRecord
data	lib/active_record/session_store.rb	/^      def data$/;"	f	class:ActiveRecord.SessionStore
data_column_size_limit	lib/active_record/session_store.rb	/^        def data_column_size_limit$/;"	f	class:ActiveRecord.SessionStore.Session
ddl_transaction	lib/active_record/migration.rb	/^      def ddl_transaction(&block)$/;"	f
decorations	lib/active_record/serializers/xml_serializer.rb	/^      def decorations(include_types = true)$/;"	f	class:ActiveRecord.XmlSerializer.Attribute
decrement	lib/active_record/base.rb	/^      def decrement(attribute, by = 1)$/;"	f	class:sanitize_sql_hash_for_conditions
decrement!	lib/active_record/base.rb	/^      def decrement!(attribute, by = 1)$/;"	f	class:sanitize_sql_hash_for_conditions
decrement_counter	lib/active_record/base.rb	/^      def decrement_counter(counter_name, id)$/;"	f	class:ActiveRecord.Base
decrement_open_transactions	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def decrement_open_transactions$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
default_error_messages	lib/active_record/validations.rb	/^      def default_error_messages$/;"	f	class:ActiveRecord.Error.Errors
default_options	lib/active_record/validations.rb	/^      def default_options$/;"	f	class:ActiveRecord.Error.generate_message
default_primary_key_type	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def default_primary_key_type$/;"	f
default_scope	lib/active_record/base.rb	/^        def default_scope(options = {})$/;"	f
default_select	lib/active_record/base.rb	/^        def default_select(qualified)$/;"	f	class:ActiveRecord.Base
default_sequence_name	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def default_sequence_name(table, column)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
default_sequence_name	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def default_sequence_name(table_name, pk = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
default_string	lib/active_record/schema_dumper.rb	/^      def default_string(value)$/;"	f	class:ActiveRecord.SchemaDumper.table
define	lib/active_record/schema.rb	/^    def self.define(info={}, &block)$/;"	F	class:ActiveRecord.Schema
define_all_hashes_method	lib/active_record/connection_adapters/mysql_adapter.rb	/^  def self.define_all_hashes_method!$/;"	F	class:MysqlCompat
define_attr_method	lib/active_record/base.rb	/^        def define_attr_method(name, value=nil, &block)$/;"	f
define_attribute_methods	lib/active_record/attribute_methods.rb	/^      def define_attribute_methods$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
define_question_method	lib/active_record/attribute_methods.rb	/^        def define_question_method(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods
define_read_method	lib/active_record/attribute_methods.rb	/^        def define_read_method(symbol, attr_name, column)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
define_read_method_for_serialized_attribute	lib/active_record/attribute_methods.rb	/^        def define_read_method_for_serialized_attribute(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
define_read_method_for_time_zone_conversion	lib/active_record/attribute_methods.rb	/^        def define_read_method_for_time_zone_conversion(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
define_write_method	lib/active_record/attribute_methods.rb	/^        def define_write_method(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods
define_write_method_for_serialized_attribute	lib/active_record/attribute_methods.rb	/^        def define_write_method_for_serialized_attribute(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods
define_write_method_for_time_zone_conversion	lib/active_record/attribute_methods.rb	/^        def define_write_method_for_time_zone_conversion(attr_name)$/;"	f	class:ActiveRecord
delete	lib/active_record/associations/association_collection.rb	/^      def delete(*records)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
delete	lib/active_record/base.rb	/^      def delete$/;"	f	class:sanitize_sql_hash_for_conditions
delete	lib/active_record/base.rb	/^      def delete(id)$/;"	f	class:ActiveRecord.Base
delete	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def delete(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
delete_all	lib/active_record/associations/association_collection.rb	/^      def delete_all$/;"	f	class:ActiveRecord.Associations.AssociationCollection
delete_all	lib/active_record/base.rb	/^      def delete_all(conditions = nil)$/;"	f	class:ActiveRecord.Base
delete_all_has_many_dependencies	lib/active_record/associations.rb	/^        def delete_all_has_many_dependencies(record, reflection_name, association_class, dependent_conditions)$/;"	f
delete_existing_fixtures	lib/active_record/fixtures.rb	/^  def delete_existing_fixtures$/;"	f	class:Fixtures
delete_records	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def delete_records(records)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
delete_records	lib/active_record/associations/has_many_association.rb	/^        def delete_records(records)$/;"	f	class:ActiveRecord.Associations
delete_records	lib/active_record/associations/has_many_through_association.rb	/^        def delete_records(records)$/;"	f	class:ActiveRecord.Associations
delete_sql	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def delete_sql(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
delete_sql	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def delete_sql(sql, name = nil) #:nodoc:$/;"	f	class:SQLiteAdapter
dependent?	lib/active_record/associations/association_proxy.rb	/^        def dependent?$/;"	f	class:ActiveRecord.Associations.AssociationProxy
dependent_conditions	lib/active_record/reflection.rb	/^      def dependent_conditions(record, base_class, extra_conditions)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
derive_class_name	lib/active_record/reflection.rb	/^        def derive_class_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
derive_class_name	lib/active_record/reflection.rb	/^        def derive_class_name$/;"	f	class:ActiveRecord.Reflection.MacroReflection
derive_class_name	lib/active_record/reflection.rb	/^        def derive_class_name$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
derive_primary_key_name	lib/active_record/reflection.rb	/^        def derive_primary_key_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
descends_from_active_record?	lib/active_record/base.rb	/^      def descends_from_active_record?$/;"	f	class:ActiveRecord.Base
destroy	lib/active_record/associations/association_collection.rb	/^      def destroy(*records)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
destroy	lib/active_record/base.rb	/^      def destroy$/;"	f	class:sanitize_sql_hash_for_conditions
destroy	lib/active_record/base.rb	/^      def destroy(id)$/;"	f	class:ActiveRecord.Base
destroy	lib/active_record/session_store.rb	/^      def destroy$/;"	f	class:ActiveRecord
destroy	lib/active_record/session_store.rb	/^      def destroy(env)$/;"	f
destroy_all	lib/active_record/associations/association_collection.rb	/^      def destroy_all$/;"	f	class:ActiveRecord.Associations.AssociationCollection
destroy_all	lib/active_record/base.rb	/^      def destroy_all(conditions = nil)$/;"	f	class:ActiveRecord.Base
destroy_with_callbacks	lib/active_record/callbacks.rb	/^    def destroy_with_callbacks #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
destroy_with_lock	lib/active_record/locking/optimistic.rb	/^        def destroy_with_lock #:nodoc:$/;"	f	class:ActiveRecord.Locking
destroy_with_transactions	lib/active_record/transactions.rb	/^    def destroy_with_transactions #:nodoc:$/;"	f	class:ActiveRecord.Transactions
destroy_without_callbacks	lib/active_record/associations.rb	/^          def destroy_without_callbacks                            # def destroy_without_callbacks$/;"	f	class:ActiveRecord.Associations.ClassMethods.has_and_belongs_to_many
destroyed?	lib/active_record/base.rb	/^      def destroyed?$/;"	f	class:sanitize_sql_hash_for_conditions
dirties_query_cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^        def dirties_query_cache(base, *method_names)$/;"	f	class:ActiveRecord.ConnectionAdapters.QueryCache
disable_referential_integrity	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def disable_referential_integrity(&block)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
disable_referential_integrity	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def disable_referential_integrity(&block) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
disable_referential_integrity	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def disable_referential_integrity(&block) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
disconnect!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
disconnect!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
disconnect!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
disconnect!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
disconnect!	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def disconnect!$/;"	f	class:SQLiteAdapter
distinct	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def distinct(columns, order_by)$/;"	f	class:ActiveRecord.ConnectionAdapters
distinct	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def distinct(columns, order_by) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
down	lib/active_record/migration.rb	/^      def down(migrations_path, target_version = nil)$/;"	f	class:Migrator
down?	lib/active_record/migration.rb	/^      def down?$/;"	f
down_with_benchmarks	lib/active_record/migration.rb	/^      def down_with_benchmarks #:nodoc:$/;"	f	class:ActiveRecord.Migration
drop_database	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def drop_database(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
drop_database	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def drop_database(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
drop_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def drop_table(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
drop_table	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def drop_table(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
drop_table!	lib/active_record/session_store.rb	/^        def drop_table!$/;"	f	class:ActiveRecord.SessionStore.Session
drop_table!	lib/active_record/session_store.rb	/^        def drop_table!$/;"	f	class:ActiveRecord.SqlBypass
dump	lib/active_record/schema_dumper.rb	/^    def dump(stream)$/;"	f	class:ActiveRecord.SchemaDumper
dump	lib/active_record/schema_dumper.rb	/^    def self.dump(connection=ActiveRecord::Base.connection, stream=STDOUT)$/;"	F	class:ActiveRecord.SchemaDumper
dump_schema_information	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def dump_schema_information #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
each	lib/active_record/fixtures.rb	/^  def each$/;"	f	class:Fixture
each	lib/active_record/validations.rb	/^    def each$/;"	f	class:ActiveRecord.Error
each_error	lib/active_record/validations.rb	/^    def each_error$/;"	f	class:ActiveRecord.Error
each_full	lib/active_record/validations.rb	/^    def each_full$/;"	f	class:ActiveRecord.Error
empty?	lib/active_record/associations/association_collection.rb	/^      def empty?$/;"	f	class:ActiveRecord.Associations.AssociationCollection
empty?	lib/active_record/named_scope.rb	/^      def empty?$/;"	f	class:ActiveRecord.NamedScope.Scope
empty?	lib/active_record/validations.rb	/^    def empty?$/;"	f	class:ActiveRecord.Error
empty_insert_statement	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def empty_insert_statement(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
empty_insert_statement	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def empty_insert_statement(table_name)$/;"	f
encode_quoted_value	lib/active_record/base.rb	/^        def encode_quoted_value(value) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
encoding	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def encoding$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
ensure_owner_is_not_new	lib/active_record/associations/association_collection.rb	/^        def ensure_owner_is_not_new$/;"	f	class:ActiveRecord.Associations.AssociationCollection
ensure_proper_type	lib/active_record/base.rb	/^      def ensure_proper_type$/;"	f
eql?	lib/active_record/base.rb	/^      def eql?(comparison_object)$/;"	f	class:sanitize_sql_hash_for_conditions
erb_render	lib/active_record/fixtures.rb	/^    def erb_render(fixture_content)$/;"	f
errors	lib/active_record/validations.rb	/^    def errors$/;"	f	class:ActiveRecord.Validations
escape_bytea	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def escape_bytea(original_value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
establish_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def establish_connection(name, spec)$/;"	f	class:ActiveRecord.ConnectionHandler
establish_connection	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^    def self.establish_connection(spec = nil)$/;"	F	class:ActiveRecord.Base
evaluate_attribute_method	lib/active_record/attribute_methods.rb	/^        def evaluate_attribute_method(attr_name, method_definition, method_name=attr_name)$/;"	f
execute	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def execute(sql, name = nil, skip_logging = false)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
execute	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def execute(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
execute	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def execute(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
execute	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def execute(sql, name = nil) #:nodoc:$/;"	f	class:SQLiteAdapter
execute_callstack_for_multiparameter_attributes	lib/active_record/base.rb	/^      def execute_callstack_for_multiparameter_attributes(callstack)$/;"	f
execute_grouped_calculation	lib/active_record/calculations.rb	/^        def execute_grouped_calculation(operation, column_name, column, options) #:nodoc:$/;"	f	class:ActiveRecord.Calculations.ClassMethods
execute_simple_calculation	lib/active_record/calculations.rb	/^        def execute_simple_calculation(operation, column_name, column, options) #:nodoc:$/;"	f	class:ActiveRecord.Calculations.ClassMethods
exists?	lib/active_record/base.rb	/^      def exists?(id_or_conditions = {})$/;"	f	class:ActiveRecord.Base
expand_attribute_names_for_aggregates	lib/active_record/base.rb	/^        def expand_attribute_names_for_aggregates(attribute_names)$/;"	f
expand_hash_conditions_for_aggregates	lib/active_record/base.rb	/^        def expand_hash_conditions_for_aggregates(attrs)$/;"	f
expand_id_conditions	lib/active_record/base.rb	/^        def expand_id_conditions(id_or_conditions)$/;"	f
expand_range_bind_variables	lib/active_record/base.rb	/^        def expand_range_bind_variables(bind_vars) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
extended	lib/active_record/dirty.rb	/^      def self.extended(base)$/;"	F	class:ActiveRecord.Dirty.ClassMethods
extended	lib/active_record/locking/optimistic.rb	/^        def self.extended(base)$/;"	F	class:ActiveRecord.Locking.ClassMethods
extract_callstack_for_multiparameter_attributes	lib/active_record/base.rb	/^      def extract_callstack_for_multiparameter_attributes(pairs)$/;"	f
extract_default	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def extract_default(default)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
extract_default	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def extract_default(default)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlColumn
extract_limit	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def extract_limit(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_limit	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def extract_limit(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlColumn
extract_limit	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_limit(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
extract_pg_identifier_from_name	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_pg_identifier_from_name(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
extract_precision	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def extract_precision(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_precision	lib/active_record/connection_adapters/postgresql_adapter.rb	/^            def extract_precision(sql_type)  # def extract_precision(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array.connect
extract_precision	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_precision(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
extract_record	lib/active_record/associations.rb	/^            def extract_record(row)$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
extract_scale	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def extract_scale(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_scale	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_scale(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
extract_value_from_default	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def self.extract_value_from_default(default)$/;"	F	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
fallback_string_to_date	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^          def fallback_string_to_date(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fallback_string_to_time	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^          def fallback_string_to_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fast_string_to_date	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^          def fast_string_to_date(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fast_string_to_time	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^          def fast_string_to_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fetch_first_or_last_using_find?	lib/active_record/associations/association_collection.rb	/^        def fetch_first_or_last_using_find?(args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
field_changed?	lib/active_record/dirty.rb	/^      def field_changed?(attr, old, value)$/;"	f	class:ActiveRecord.Dirty
find	lib/active_record/associations/association_collection.rb	/^      def find(*args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
find	lib/active_record/associations/has_one_through_association.rb	/^      def find(*args)$/;"	f	class:ActiveRecord.Associations.HasOneThroughAssociation
find	lib/active_record/base.rb	/^      def find(*args)$/;"	f	class:ActiveRecord.Base
find	lib/active_record/fixtures.rb	/^  def find$/;"	f	class:Fixture
find_associated_records	lib/active_record/association_preload.rb	/^      def find_associated_records(ids, reflection, preload_options)$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
find_by_session_id	lib/active_record/session_store.rb	/^              def self.find_by_session_id(*args)$/;"	F	class:ActiveRecord.SessionStore.Session.setup_sessid_compatibility!
find_by_session_id	lib/active_record/session_store.rb	/^              def self.find_by_session_id(session_id)$/;"	F	class:ActiveRecord.SessionStore.Session.setup_sessid_compatibility!
find_by_session_id	lib/active_record/session_store.rb	/^        def find_by_session_id(session_id)$/;"	f	class:ActiveRecord.SessionStore.Session
find_by_session_id	lib/active_record/session_store.rb	/^        def find_by_session_id(session_id)$/;"	f	class:ActiveRecord.SqlBypass
find_by_sql	lib/active_record/base.rb	/^      def find_by_sql(sql)$/;"	f	class:ActiveRecord.Base
find_each	lib/active_record/batches.rb	/^      def find_each(options = {})$/;"	f	class:ActiveRecord.Batches.ClassMethods
find_every	lib/active_record/base.rb	/^        def find_every(options)$/;"	f	class:ActiveRecord.Base
find_from_ids	lib/active_record/base.rb	/^        def find_from_ids(ids, options)$/;"	f	class:ActiveRecord.Base
find_in_batches	lib/active_record/batches.rb	/^      def find_in_batches(options = {})$/;"	f	class:ActiveRecord.Batches.ClassMethods
find_initial	lib/active_record/base.rb	/^        def find_initial(options)$/;"	f	class:ActiveRecord.Base
find_last	lib/active_record/base.rb	/^        def find_last(options)$/;"	f	class:ActiveRecord.Base
find_one	lib/active_record/base.rb	/^        def find_one(id, options)$/;"	f	class:ActiveRecord.Base
find_parameter_position	lib/active_record/base.rb	/^      def find_parameter_position(multiparameter_name)$/;"	f
find_session	lib/active_record/session_store.rb	/^      def find_session(id)$/;"	f
find_some	lib/active_record/base.rb	/^        def find_some(ids, options)$/;"	f	class:ActiveRecord.Base
find_target	lib/active_record/associations/association_collection.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations.AssociationCollection
find_target	lib/active_record/associations/belongs_to_association.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
find_target	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
find_target	lib/active_record/associations/has_many_through_association.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations
find_target	lib/active_record/associations/has_one_association.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
find_target	lib/active_record/associations/has_one_through_association.rb	/^      def find_target$/;"	f	class:ActiveRecord.Associations.HasOneThroughAssociation
find_with_associations	lib/active_record/associations.rb	/^        def find_with_associations(options = {})$/;"	f
finder?	lib/active_record/dynamic_finder_match.rb	/^    def finder?$/;"	f	class:ActiveRecord.DynamicFinderMatch
finder_needs_type_condition?	lib/active_record/base.rb	/^      def finder_needs_type_condition? #:nodoc:$/;"	f	class:ActiveRecord.Base
finding_with_ambiguous_select?	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def finding_with_ambiguous_select?(select_clause)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
first	lib/active_record/associations/association_collection.rb	/^      def first(*args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
first	lib/active_record/base.rb	/^      def first(*args)$/;"	f	class:ActiveRecord.Base
first	lib/active_record/named_scope.rb	/^      def first(*args)$/;"	f	class:ActiveRecord.NamedScope.Scope
fixture_is_cached	lib/active_record/fixtures.rb	/^  def self.fixture_is_cached?(connection, table_name)$/;"	F	class:Fixtures
fixtures	lib/active_record/fixtures.rb	/^      def fixtures(*table_names)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
flatten_deeper	lib/active_record/associations/association_proxy.rb	/^        def flatten_deeper(array)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
foreign_key_present	lib/active_record/associations/association_proxy.rb	/^        def foreign_key_present$/;"	f	class:ActiveRecord.Associations.AssociationProxy
foreign_key_present	lib/active_record/associations/belongs_to_association.rb	/^        def foreign_key_present$/;"	f	class:ActiveRecord.Associations
foreign_key_present	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def foreign_key_present$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
format_log_entry	lib/active_record/connection_adapters/abstract_adapter.rb	/^        def format_log_entry(message, dump = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
freeze	lib/active_record/base.rb	/^      def freeze$/;"	f	class:sanitize_sql_hash_for_conditions
from_json	lib/active_record/serializers/json_serializer.rb	/^    def from_json(json)$/;"	f	class:ActiveRecord.Serialization
from_xml	lib/active_record/serializers/xml_serializer.rb	/^    def from_xml(xml)$/;"	f	class:ActiveRecord.Serialization
frozen?	lib/active_record/base.rb	/^      def frozen?$/;"	f	class:sanitize_sql_hash_for_conditions
full_message	lib/active_record/validations.rb	/^    def full_message$/;"	f	class:ActiveRecord.Error
full_messages	lib/active_record/validations.rb	/^    def full_messages(options = {})$/;"	f	class:ActiveRecord.Error
full_table_name_prefix	lib/active_record/base.rb	/^      def full_table_name_prefix #:nodoc:$/;"	f	class:ActiveRecord.Base
generate_full_message	lib/active_record/validations.rb	/^      def generate_full_message(options = {})$/;"	f	class:ActiveRecord.Error.generate_message
generate_message	lib/active_record/validations.rb	/^      def generate_message(options = {})$/;"	f	class:ActiveRecord.Error
generate_message	lib/active_record/validations.rb	/^    def generate_message(attribute, message = :invalid, options = {})$/;"	f	class:ActiveRecord.Error
generated_methods	lib/active_record/attribute_methods.rb	/^      def generated_methods #:nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
generated_methods?	lib/active_record/attribute_methods.rb	/^      def generated_methods?$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
get_all_versions	lib/active_record/migration.rb	/^      def get_all_versions$/;"	f	class:Migrator
get_primary_key	lib/active_record/base.rb	/^      def get_primary_key(base_name) #:nodoc:$/;"	f	class:ActiveRecord.Base
get_session	lib/active_record/session_store.rb	/^      def get_session(env, sid)$/;"	f
get_session_model	lib/active_record/session_store.rb	/^      def get_session_model(env, sid)$/;"	f
guard_against_unlimitable_reflections	lib/active_record/associations.rb	/^        def guard_against_unlimitable_reflections(reflections, options)$/;"	f
has_and_belongs_to_many	lib/active_record/associations.rb	/^      def has_and_belongs_to_many(association_id, options = {}, &extension)$/;"	f	class:ActiveRecord.Associations.ClassMethods
has_attribute?	lib/active_record/base.rb	/^      def has_attribute?(attr_name)$/;"	f	class:sanitize_sql_hash_for_conditions
has_cached_counter?	lib/active_record/associations/has_many_association.rb	/^        def has_cached_counter?$/;"	f	class:ActiveRecord.Associations
has_cached_counter?	lib/active_record/associations/has_many_through_association.rb	/^        def has_cached_counter?$/;"	f	class:ActiveRecord.Associations
has_default?	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def has_default?$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
has_default?	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def has_default?$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlColumn
has_destroy_flag?	lib/active_record/nested_attributes.rb	/^    def has_destroy_flag?(hash)$/;"	f
has_inverse?	lib/active_record/reflection.rb	/^      def has_inverse?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
has_many	lib/active_record/associations.rb	/^      def has_many(association_id, options = {}, &extension)$/;"	f	class:ActiveRecord.Associations.ClassMethods
has_one	lib/active_record/associations.rb	/^      def has_one(association_id, options = {})$/;"	f	class:ActiveRecord.Associations.ClassMethods
has_primary_key?	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def has_primary_key?$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
has_primary_key_column?	lib/active_record/fixtures.rb	/^    def has_primary_key_column?$/;"	f	class:Fixtures
hash	lib/active_record/base.rb	/^      def hash$/;"	f	class:sanitize_sql_hash_for_conditions
header	lib/active_record/schema_dumper.rb	/^      def header(stream)$/;"	f	class:ActiveRecord.SchemaDumper
human_attribute_name	lib/active_record/base.rb	/^      def human_attribute_name(attribute_key_name, options = {})$/;"	f	class:ActiveRecord.Base
human_name	lib/active_record/base.rb	/^      def human_name(options = {})$/;"	f	class:ActiveRecord.Base
human_name	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def human_name$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
id	lib/active_record/base.rb	/^      def id$/;"	f	class:sanitize_sql_hash_for_conditions
id=	lib/active_record/base.rb	/^      def id=(value)$/;"	f	class:sanitize_sql_hash_for_conditions
id_before_type_cast	lib/active_record/base.rb	/^      def id_before_type_cast #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions
identify	lib/active_record/fixtures.rb	/^  def self.identify(label)$/;"	F	class:Fixtures
in_clause_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def in_clause_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
in_or_equals_for_ids	lib/active_record/association_preload.rb	/^      def in_or_equals_for_ids(ids)$/;"	f	class:ActiveRecord.AssociationPreload
include?	lib/active_record/associations/association_collection.rb	/^      def include?(record)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
include_eager_conditions?	lib/active_record/associations.rb	/^        def include_eager_conditions?(options, tables = nil, joined_tables = nil)$/;"	f
include_eager_order?	lib/active_record/associations.rb	/^        def include_eager_order?(options, tables = nil, joined_tables = nil)$/;"	f
include_eager_select?	lib/active_record/associations.rb	/^        def include_eager_select?(options, joined_tables = nil)$/;"	f
include_in_memory?	lib/active_record/associations/association_collection.rb	/^        def include_in_memory?(record)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
included	lib/active_record/aggregations.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Aggregations
included	lib/active_record/association_preload.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.AssociationPreload
included	lib/active_record/associations.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Associations
included	lib/active_record/attribute_methods.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.AttributeMethods
included	lib/active_record/autosave_association.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.AutosaveAssociation
included	lib/active_record/batches.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Batches
included	lib/active_record/calculations.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Calculations
included	lib/active_record/callbacks.rb	/^    def self.included(base) #:nodoc:$/;"	F	class:ActiveRecord.Callbacks
included	lib/active_record/connection_adapters/abstract/query_cache.rb	/^        def included(base)$/;"	f	class:ActiveRecord.ConnectionAdapters.QueryCache
included	lib/active_record/dirty.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Dirty
included	lib/active_record/fixtures.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.TestFixtures
included	lib/active_record/locking/optimistic.rb	/^      def self.included(base) #:nodoc:$/;"	F	class:ActiveRecord.Locking.Optimistic
included	lib/active_record/named_scope.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.NamedScope
included	lib/active_record/nested_attributes.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.NestedAttributes
included	lib/active_record/observer.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Observing
included	lib/active_record/reflection.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Reflection
included	lib/active_record/serializers/json_serializer.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Serialization
included	lib/active_record/timestamp.rb	/^    def self.included(base) #:nodoc:$/;"	F	class:ActiveRecord.Timestamp
included	lib/active_record/transactions.rb	/^    def self.included(base)$/;"	F	class:ActiveRecord.Transactions
included	lib/active_record/validations.rb	/^    def self.included(base) # :nodoc:$/;"	F	class:ActiveRecord.Validations
increment	lib/active_record/base.rb	/^      def increment(attribute, by = 1)$/;"	f	class:sanitize_sql_hash_for_conditions
increment!	lib/active_record/base.rb	/^      def increment!(attribute, by = 1)$/;"	f	class:sanitize_sql_hash_for_conditions
increment_counter	lib/active_record/base.rb	/^      def increment_counter(counter_name, id)$/;"	f	class:ActiveRecord.Base
increment_open_transactions	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def increment_open_transactions$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
index	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def index(column_name, options = {})$/;"	f	class:Table
index_exists?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def index_exists?(table_name, index_name, default)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
index_name	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def index_name(table_name, options) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
index_name_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def index_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
index_name_length	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def index_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
indexes	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def indexes(table_name, name = nil)#:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
indexes	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def indexes(table_name, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
indexes	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def indexes(table_name, name = nil) #:nodoc:$/;"	f	class:SQLiteAdapter
indexes	lib/active_record/schema_dumper.rb	/^      def indexes(table, stream)$/;"	f	class:ActiveRecord.SchemaDumper.table
indexes_per_table	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def indexes_per_table$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
inheritance_column	lib/active_record/base.rb	/^      def inheritance_column$/;"	f	class:ActiveRecord.Base
inheritance_column_name	lib/active_record/fixtures.rb	/^    def inheritance_column_name$/;"	f	class:Fixtures
inherited	lib/active_record/base.rb	/^    def self.inherited(child) #:nodoc:$/;"	F	class:ActiveRecord.Base
inherited	lib/active_record/observer.rb	/^        def inherited(subclass)$/;"	f	class:ActiveRecord.Observing.ClassMethods
initialize	lib/active_record/associations.rb	/^            def initialize(active_record, joins = nil)$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
initialize	lib/active_record/associations.rb	/^            def initialize(reflection, join_dependency, parent = nil)$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinAssociation
initialize	lib/active_record/associations.rb	/^          def initialize(base, associations, joins)$/;"	f	class:JoinDependency
initialize	lib/active_record/associations.rb	/^    def initialize(owner, reflection)$/;"	f	class:ActiveRecord.HasManyThroughCantAssociateNewRecords
initialize	lib/active_record/associations.rb	/^    def initialize(owner, reflection)$/;"	f	class:ActiveRecord.HasManyThroughCantAssociateThroughHasOneOrManyReflection
initialize	lib/active_record/associations.rb	/^    def initialize(owner, reflection)$/;"	f	class:ActiveRecord.HasManyThroughCantDissociateNewRecords
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection)$/;"	f	class:ActiveRecord.HasManyThroughAssociationNotFoundError
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection, source_reflection)$/;"	f	class:ActiveRecord.HasManyThroughAssociationPointlessSourceTypeError
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection, source_reflection)$/;"	f	class:ActiveRecord.HasManyThroughAssociationPolymorphicError
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.EagerLoadPolymorphicError
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.HasAndBelongsToManyAssociationForeignKeyNeeded
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.HasManyThroughSourceAssociationMacroError
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.HasManyThroughSourceAssociationNotFoundError
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.ReadOnlyAssociation
initialize	lib/active_record/associations.rb	/^    def initialize(reflection, associated_class = nil)$/;"	f	class:ActiveRecord.InverseOfAssociationNotFoundError
initialize	lib/active_record/associations/association_collection.rb	/^      def initialize(owner, reflection)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
initialize	lib/active_record/associations/association_proxy.rb	/^      def initialize(owner, reflection)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
initialize	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def initialize(owner, reflection)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
initialize	lib/active_record/associations/has_one_association.rb	/^      def initialize(owner, reflection)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
initialize	lib/active_record/base.rb	/^      def initialize(attributes = nil)$/;"	f	class:sanitize_sql_hash_for_conditions
initialize	lib/active_record/base.rb	/^    def initialize(errors)$/;"	f	class:ActiveRecord.MultiparameterAssignmentErrors
initialize	lib/active_record/base.rb	/^    def initialize(message, exception, attribute)$/;"	f	class:ActiveRecord.AttributeAssignmentError
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def initialize(app)$/;"	f	class:ActiveRecord.ConnectionManagement
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def initialize(pools = {})$/;"	f	class:ActiveRecord.ConnectionHandler
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def initialize(spec)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
initialize	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def initialize (config, adapter_method)$/;"	f	class:ActiveRecord.Base.ConnectionSpecification
initialize	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def initialize(base)$/;"	f	class:ActiveRecord.TableDefinition
initialize	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def initialize(name, default, sql_type = nil, null = true)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
initialize	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def initialize(table_name, base)$/;"	f	class:Table
initialize	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def initialize(connection, logger = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
initialize	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def initialize(connection, logger, connection_options, config)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
initialize	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def initialize(connection, logger, connection_parameters, config)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
initialize	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def initialize(name, default, sql_type = nil, null = true)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
initialize	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def initialize(version_string)$/;"	f	class:SQLiteAdapter.Version
initialize	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def initialize(connection, logger, config)$/;"	f	class:SQLiteAdapter
initialize	lib/active_record/dynamic_finder_match.rb	/^    def initialize(method)$/;"	f	class:ActiveRecord.DynamicFinderMatch
initialize	lib/active_record/dynamic_scope_match.rb	/^    def initialize(method)$/;"	f	class:ActiveRecord.DynamicScopeMatch
initialize	lib/active_record/fixtures.rb	/^  def initialize(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)$/;"	f	class:Fixtures
initialize	lib/active_record/fixtures.rb	/^  def initialize(fixture, model_class, connection = ActiveRecord::Base.connection)$/;"	f	class:Fixture
initialize	lib/active_record/migration.rb	/^    def initialize(direction, migrations_path, target_version = nil)$/;"	f
initialize	lib/active_record/migration.rb	/^    def initialize(name)$/;"	f	class:ActiveRecord.DuplicateMigrationNameError
initialize	lib/active_record/migration.rb	/^    def initialize(name)$/;"	f	class:ActiveRecord.IllegalMigrationNameError
initialize	lib/active_record/migration.rb	/^    def initialize(version)$/;"	f	class:ActiveRecord.DuplicateMigrationVersionError
initialize	lib/active_record/migration.rb	/^    def initialize(version)$/;"	f	class:ActiveRecord.UnknownMigrationVersionError
initialize	lib/active_record/named_scope.rb	/^      def initialize(proxy_scope, options, &block)$/;"	f	class:ActiveRecord.NamedScope.Scope
initialize	lib/active_record/observer.rb	/^    def initialize$/;"	f	class:ActiveRecord
initialize	lib/active_record/query_cache.rb	/^    def initialize(app)$/;"	f	class:ActiveRecord.QueryCache
initialize	lib/active_record/reflection.rb	/^      def initialize(macro, name, options, active_record)$/;"	f	class:ActiveRecord.Reflection.MacroReflection
initialize	lib/active_record/schema_dumper.rb	/^      def initialize(connection)$/;"	f	class:ActiveRecord.SchemaDumper
initialize	lib/active_record/serialization.rb	/^      def initialize(record, options = nil)$/;"	f	class:ActiveRecord.Serialization.Serializer
initialize	lib/active_record/serializers/xml_serializer.rb	/^      def initialize(name, record)$/;"	f	class:ActiveRecord.XmlSerializer.Attribute
initialize	lib/active_record/session_store.rb	/^      def initialize(attributes)$/;"	f	class:ActiveRecord
initialize	lib/active_record/validations.rb	/^    def initialize(base) # :nodoc:$/;"	f	class:ActiveRecord.Error
initialize	lib/active_record/validations.rb	/^    def initialize(base, attribute, type = nil, options = {})$/;"	f	class:ActiveRecord.Error
initialize	lib/active_record/validations.rb	/^    def initialize(record)$/;"	f	class:ActiveRecord.RecordInvalid
initialize_schema_migrations_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def initialize_schema_migrations_table$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
insert	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def insert(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
insert	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def insert(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
insert	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def insert(sql, name = nil, pk = nil, id_value = nil)$/;"	f	class:DeprecatedSQLiteAdapter
insert_fixture	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def insert_fixture(fixture, table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
insert_fixtures	lib/active_record/fixtures.rb	/^  def insert_fixtures$/;"	f	class:Fixtures
insert_record	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def insert_record(record, force = true, validate = true)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
insert_record	lib/active_record/associations/has_many_association.rb	/^        def insert_record(record, force = false, validate = true)$/;"	f	class:ActiveRecord.Associations
insert_record	lib/active_record/associations/has_many_through_association.rb	/^        def insert_record(record, force = true, validate = true)$/;"	f	class:ActiveRecord.Associations
insert_sql	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
insert_sql	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
insert_sql	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil) #:nodoc:$/;"	f	class:SQLiteAdapter
inspect	lib/active_record/associations/association_proxy.rb	/^      def inspect$/;"	f	class:ActiveRecord.Associations.AssociationProxy
inspect	lib/active_record/base.rb	/^      def inspect$/;"	f	class:ActiveRecord.Base
inspect	lib/active_record/base.rb	/^      def inspect$/;"	f	class:sanitize_sql_hash_for_conditions
instance_method_already_implemented?	lib/active_record/attribute_methods.rb	/^      def instance_method_already_implemented?(method_name)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
instantiate	lib/active_record/associations.rb	/^            def instantiate(row)$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
instantiate	lib/active_record/associations.rb	/^          def instantiate(rows)$/;"	f	class:JoinDependency
instantiate	lib/active_record/base.rb	/^        def instantiate(record)$/;"	f	class:ActiveRecord.Base
instantiate_all_loaded_fixtures	lib/active_record/fixtures.rb	/^  def self.instantiate_all_loaded_fixtures(object, load_instances = true)$/;"	F	class:Fixtures
instantiate_fixtures	lib/active_record/fixtures.rb	/^      def instantiate_fixtures$/;"	f	class:ActiveRecord.TestFixtures
instantiate_fixtures	lib/active_record/fixtures.rb	/^  def self.instantiate_fixtures(object, table_name, fixtures, load_instances = true)$/;"	F	class:Fixtures
instantiate_observers	lib/active_record/observer.rb	/^      def instantiate_observers$/;"	f	class:ActiveRecord.Observing.ClassMethods
instantiate_time_object	lib/active_record/base.rb	/^      def instantiate_time_object(name, values)$/;"	f
instantiator?	lib/active_record/dynamic_finder_match.rb	/^    def instantiator?$/;"	f	class:ActiveRecord.DynamicFinderMatch
interpolate_sql	lib/active_record/associations.rb	/^              def interpolate_sql(sql)$/;"	f	class:JoinDependency.remove_duplicate_results!
interpolate_sql	lib/active_record/associations/association_proxy.rb	/^        def interpolate_sql(sql, record = nil)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
interpolate_sql	lib/active_record/base.rb	/^      def interpolate_sql(sql, record = nil)$/;"	f
interpolate_sql_for_preload	lib/active_record/association_preload.rb	/^      def interpolate_sql_for_preload(sql)$/;"	f	class:ActiveRecord.AssociationPreload
invalid?	lib/active_record/validations.rb	/^    def invalid?$/;"	f	class:ActiveRecord.Validations
invalid?	lib/active_record/validations.rb	/^    def invalid?(attribute)$/;"	f	class:ActiveRecord.Error
inverse_of	lib/active_record/reflection.rb	/^      def inverse_of$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
join_associations	lib/active_record/associations.rb	/^          def join_associations$/;"	f	class:JoinDependency
join_base	lib/active_record/associations.rb	/^          def join_base$/;"	f	class:JoinDependency
join_for_table_name	lib/active_record/associations.rb	/^          def join_for_table_name(table_name)$/;"	f	class:JoinDependency.remove_duplicate_results!
join_table_name	lib/active_record/associations.rb	/^        def join_table_name(first_table_name, second_table_name)$/;"	f	class:ActiveRecord.Associations.ClassMethods
join_type	lib/active_record/associations.rb	/^              def join_type$/;"	f	class:InnerJoinDependency.InnerJoinAssociation
join_type	lib/active_record/associations.rb	/^              def join_type$/;"	f	class:JoinDependency.remove_duplicate_results!
joined_tables	lib/active_record/associations.rb	/^        def joined_tables(options)$/;"	f
joins_for_table_name	lib/active_record/associations.rb	/^          def joins_for_table_name(table_name)$/;"	f	class:JoinDependency.remove_duplicate_results!
joins_per_query	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def joins_per_query$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
key_list	lib/active_record/fixtures.rb	/^  def key_list$/;"	f	class:Fixture
keys	lib/active_record/fixtures.rb	/^      def keys;   map { |k, v| k } end$/;"	f	class:YAML.Omap
klass	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def klass$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
klass	lib/active_record/reflection.rb	/^      def klass$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
klass	lib/active_record/reflection.rb	/^      def klass$/;"	f	class:ActiveRecord.Reflection.MacroReflection
last	lib/active_record/associations/association_collection.rb	/^      def last(*args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
last	lib/active_record/base.rb	/^      def last(*args)$/;"	f	class:ActiveRecord.Base
last	lib/active_record/named_scope.rb	/^      def last(*args)$/;"	f	class:ActiveRecord.NamedScope.Scope
last_insert_id	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def last_insert_id(table, sequence_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
length	lib/active_record/associations/association_collection.rb	/^      def length$/;"	f	class:ActiveRecord.Associations.AssociationCollection
limited_update_conditions	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def limited_update_conditions(where_sql, quoted_table_name, quoted_primary_key)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
limited_update_conditions	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def limited_update_conditions(where_sql, quoted_table_name, quoted_primary_key)$/;"	f	class:ActiveRecord.ConnectionAdapters
load_all	lib/active_record.rb	/^  def self.load_all!$/;"	F	class:ActiveRecord
load_fixtures	lib/active_record/fixtures.rb	/^      def load_fixtures$/;"	f	class:ActiveRecord.TestFixtures
load_found	lib/active_record/named_scope.rb	/^      def load_found$/;"	f	class:ActiveRecord.NamedScope.Scope
load_instances?	lib/active_record/fixtures.rb	/^      def load_instances?$/;"	f	class:ActiveRecord.TestFixtures
load_migration	lib/active_record/migration.rb	/^      def load_migration$/;"	f	class:MigrationProxy
load_target	lib/active_record/associations/association_collection.rb	/^        def load_target$/;"	f	class:ActiveRecord.Associations.AssociationCollection
load_target	lib/active_record/associations/association_proxy.rb	/^        def load_target$/;"	f	class:ActiveRecord.Associations.AssociationProxy
loaded	lib/active_record/associations/association_proxy.rb	/^      def loaded$/;"	f	class:ActiveRecord.Associations.AssociationProxy
loaded?	lib/active_record/associations/association_proxy.rb	/^      def loaded?$/;"	f	class:ActiveRecord.Associations.AssociationProxy
loaded?	lib/active_record/session_store.rb	/^      def loaded?$/;"	f	class:ActiveRecord
loaded?	lib/active_record/session_store.rb	/^      def loaded?$/;"	f	class:ActiveRecord.SessionStore
lock!	lib/active_record/locking/pessimistic.rb	/^      def lock!(lock = true)$/;"	f	class:ActiveRecord.Locking.Pessimistic
locking_column	lib/active_record/locking/optimistic.rb	/^        def locking_column$/;"	f	class:ActiveRecord.Locking
locking_enabled?	lib/active_record/locking/optimistic.rb	/^        def locking_enabled?$/;"	f	class:ActiveRecord.Locking
locking_enabled?	lib/active_record/locking/optimistic.rb	/^      def locking_enabled? #:nodoc:$/;"	f	class:ActiveRecord.Locking
log	lib/active_record/connection_adapters/abstract_adapter.rb	/^        def log(sql, name)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
log_info	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def log_info(sql, name, ms)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
log_protected_attribute_removal	lib/active_record/base.rb	/^      def log_protected_attribute_removal(*attributes)$/;"	f
macro	lib/active_record/reflection.rb	/^      def macro$/;"	f	class:ActiveRecord.Reflection.MacroReflection
mark_for_destruction	lib/active_record/autosave_association.rb	/^    def mark_for_destruction$/;"	f	class:ActiveRecord
marked_for_destruction?	lib/active_record/autosave_association.rb	/^    def marked_for_destruction?$/;"	f	class:ActiveRecord
marshal	lib/active_record/session_store.rb	/^        def marshal(data)$/;"	f	class:ActiveRecord.SessionStore.Session
marshal	lib/active_record/session_store.rb	/^        def marshal(data)$/;"	f	class:ActiveRecord.SqlBypass
marshal_data!	lib/active_record/session_store.rb	/^        def marshal_data!$/;"	f	class:ActiveRecord.SessionStore
match	lib/active_record/dynamic_finder_match.rb	/^    def self.match(method)$/;"	F	class:ActiveRecord.DynamicFinderMatch
match	lib/active_record/dynamic_scope_match.rb	/^    def self.match(method)$/;"	F	class:ActiveRecord.DynamicScopeMatch
match_attribute_method?	lib/active_record/attribute_methods.rb	/^      def match_attribute_method?(method_name)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
maximum	lib/active_record/calculations.rb	/^      def maximum(column_name, options = {})$/;"	f	class:ActiveRecord.Calculations.ClassMethods
merge_conditions	lib/active_record/base.rb	/^      def merge_conditions(*conditions)$/;"	f	class:ActiveRecord.Base
merge_includes	lib/active_record/base.rb	/^        def merge_includes(first, second)$/;"	f	class:ActiveRecord.Base
merge_joins	lib/active_record/base.rb	/^        def merge_joins(*joins)$/;"	f	class:ActiveRecord.Base
merge_options_from_reflection!	lib/active_record/associations/association_proxy.rb	/^        def merge_options_from_reflection!(options)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
merge_with_conditions	lib/active_record/associations/has_one_association.rb	/^        def merge_with_conditions(attrs={})$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
message	lib/active_record/validations.rb	/^    def message$/;"	f	class:ActiveRecord.Error
method_missing	lib/active_record/associations/association_collection.rb	/^        def method_missing(method, *args, &block)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
method_missing	lib/active_record/associations/association_proxy.rb	/^        def method_missing(method, *args, &block)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
method_missing	lib/active_record/attribute_methods.rb	/^    def method_missing(method_id, *args, &block)$/;"	f
method_missing	lib/active_record/base.rb	/^        def method_missing(method_id, *arguments, &block)$/;"	f	class:ActiveRecord
method_missing	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def method_missing(symbol, *args)$/;"	f	class:ActiveRecord.TableDefinition
method_missing	lib/active_record/migration.rb	/^      def method_missing(method, *arguments, &block)$/;"	f	class:ActiveRecord.Migration
method_missing	lib/active_record/named_scope.rb	/^      def method_missing(method, *args, &block)$/;"	f	class:ActiveRecord.NamedScope.Scope
microseconds	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^          def microseconds(time)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
migrate	lib/active_record/migration.rb	/^      def migrate(direction)$/;"	f	class:ActiveRecord.Migration
migrate	lib/active_record/migration.rb	/^      def migrate(migrations_path, target_version = nil)$/;"	f	class:Migrator
migrate	lib/active_record/migration.rb	/^    def migrate$/;"	f
migrated	lib/active_record/migration.rb	/^    def migrated$/;"	f
migration	lib/active_record/migration.rb	/^      def migration$/;"	f	class:MigrationProxy
migrations	lib/active_record/migration.rb	/^    def migrations$/;"	f
migrations_path	lib/active_record/migration.rb	/^      def migrations_path$/;"	f	class:Migrator
migrations_path	lib/active_record/schema.rb	/^    def self.migrations_path$/;"	F	class:ActiveRecord.Schema
minimum	lib/active_record/calculations.rb	/^      def minimum(column_name, options = {})$/;"	f	class:ActiveRecord.Calculations.ClassMethods
missing_attribute	lib/active_record/attribute_methods.rb	/^      def missing_attribute(attr_name, stack)$/;"	f
missing_default_forged_as_empty_string?	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def missing_default_forged_as_empty_string?(default)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlColumn
model_class	lib/active_record/fixtures.rb	/^    def model_class$/;"	f	class:Fixtures
move_table	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def move_table(from, to, options = {}, &block) #:nodoc:$/;"	f
mysql_connection	lib/active_record/connection_adapters/mysql_adapter.rb	/^    def self.mysql_connection(config) # :nodoc:$/;"	F	class:ActiveRecord.Base
name	lib/active_record/reflection.rb	/^      def name$/;"	f	class:ActiveRecord.Reflection.MacroReflection
named_scope	lib/active_record/named_scope.rb	/^      def named_scope(name, options = {}, &block)$/;"	f	class:ActiveRecord.NamedScope.ClassMethods
native	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def native$/;"	f
native	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def native$/;"	f	class:ActiveRecord
native_database_types	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def native_database_types$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
native_database_types	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def native_database_types #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
native_database_types	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def native_database_types #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
native_database_types	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def native_database_types #:nodoc:$/;"	f	class:SQLiteAdapter
needs_encoding?	lib/active_record/serializers/xml_serializer.rb	/^      def needs_encoding?$/;"	f	class:ActiveRecord.XmlSerializer.Attribute
nested_records_changed_for_autosave?	lib/active_record/autosave_association.rb	/^    def nested_records_changed_for_autosave?$/;"	f	class:ActiveRecord
new_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def new_connection$/;"	f	class:ActiveRecord.ConnectionAdapters
new_date	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^          def new_date(year, mon, mday)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
new_record	lib/active_record/associations/has_one_association.rb	/^        def new_record(replace_existing)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
new_record?	lib/active_record/base.rb	/^      def new_record?$/;"	f	class:sanitize_sql_hash_for_conditions
new_record?	lib/active_record/session_store.rb	/^      def new_record?$/;"	f	class:ActiveRecord
new_time	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^          def new_time(year, mon, mday, hour, min, sec, microsec)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
notify	lib/active_record/callbacks.rb	/^      def notify(method) #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
nullify_has_many_dependencies	lib/active_record/associations.rb	/^        def nullify_has_many_dependencies(record, reflection_name, association_class, primary_key_name, dependent_conditions)$/;"	f
number?	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def number?$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
object_from_yaml	lib/active_record/base.rb	/^      def object_from_yaml(string)$/;"	f
observe	lib/active_record/observer.rb	/^      def observe(*models)$/;"	f	class:ActiveRecord.Observer
observed_class	lib/active_record/observer.rb	/^      def observed_class$/;"	f	class:ActiveRecord.Observer
observed_class_inherited	lib/active_record/observer.rb	/^    def observed_class_inherited(subclass) #:nodoc:$/;"	f	class:ActiveRecord
observed_classes	lib/active_record/observer.rb	/^      def observed_classes$/;"	f	class:ActiveRecord
observed_subclasses	lib/active_record/observer.rb	/^      def observed_subclasses$/;"	f	class:ActiveRecord
observers	lib/active_record/observer.rb	/^      def observers$/;"	f	class:ActiveRecord.Observing.ClassMethods
observers=	lib/active_record/observer.rb	/^      def observers=(*observers)$/;"	f	class:ActiveRecord.Observing.ClassMethods
on	lib/active_record/validations.rb	/^    def on(attribute)$/;"	f	class:ActiveRecord.Error
on_base	lib/active_record/validations.rb	/^    def on_base$/;"	f	class:ActiveRecord.Error
open_transactions	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def open_transactions$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
options	lib/active_record/reflection.rb	/^      def options$/;"	f	class:ActiveRecord.Reflection.MacroReflection
options_include_default?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def options_include_default?(options)$/;"	f	class:ActiveRecord.ConnectionAdapters
order_tables	lib/active_record/associations.rb	/^        def order_tables(options)$/;"	f
outside_transaction?	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def outside_transaction?$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
outside_transaction?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def outside_transaction?$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
owner_quoted_id	lib/active_record/associations/association_proxy.rb	/^        def owner_quoted_id$/;"	f	class:ActiveRecord.Associations.AssociationProxy
owner_quoted_id	lib/active_record/associations/has_many_association.rb	/^        def owner_quoted_id$/;"	f	class:ActiveRecord.Associations.HasManyAssociation
owner_quoted_id	lib/active_record/associations/has_one_association.rb	/^        def owner_quoted_id$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
parse_sqlite_config!	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def parse_sqlite_config!(config)$/;"	f	class:ActiveRecord.Base
parse_yaml_string	lib/active_record/fixtures.rb	/^    def parse_yaml_string(fixture_content)$/;"	f
pending_migrations	lib/active_record/migration.rb	/^    def pending_migrations$/;"	f
pk_and_sequence_for	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def pk_and_sequence_for(table) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
pk_and_sequence_for	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def pk_and_sequence_for(table) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
pluralize	lib/active_record/associations.rb	/^              def pluralize(table_name)$/;"	f	class:JoinDependency.remove_duplicate_results!
polymorphic_inverse_of	lib/active_record/reflection.rb	/^      def polymorphic_inverse_of(associated_class)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
postgresql_connection	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    def self.postgresql_connection(config) # :nodoc:$/;"	F	class:ActiveRecord.Base
postgresql_version	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def postgresql_version$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
prefetch_primary_key?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def prefetch_primary_key?(table_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
preload_associations	lib/active_record/association_preload.rb	/^      def preload_associations(records, associations, preload_options={})$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
preload_belongs_to_association	lib/active_record/association_preload.rb	/^      def preload_belongs_to_association(records, reflection, preload_options={})$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
preload_has_and_belongs_to_many_association	lib/active_record/association_preload.rb	/^      def preload_has_and_belongs_to_many_association(records, reflection, preload_options={})$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
preload_has_many_association	lib/active_record/association_preload.rb	/^      def preload_has_many_association(records, reflection, preload_options={})$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
preload_has_one_association	lib/active_record/association_preload.rb	/^      def preload_has_one_association(records, reflection, preload_options={})$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
preload_one_association	lib/active_record/association_preload.rb	/^      def preload_one_association(records, association, preload_options={})$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
preload_through_records	lib/active_record/association_preload.rb	/^      def preload_through_records(records, reflection, through_association)$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
previous_record_id	lib/active_record/associations/belongs_to_association.rb	/^        def previous_record_id$/;"	f	class:ActiveRecord.Associations
primary_key	lib/active_record/base.rb	/^      def primary_key$/;"	f	class:ActiveRecord.Base
primary_key	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def primary_key(name)$/;"	f	class:ActiveRecord.TableDefinition
primary_key	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def primary_key(table)$/;"	f	class:ActiveRecord.ConnectionAdapters
primary_key	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def primary_key(table)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
primary_key	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def primary_key(table_name) #:nodoc:$/;"	f
primary_key_name	lib/active_record/fixtures.rb	/^    def primary_key_name$/;"	f	class:Fixtures
primary_key_name	lib/active_record/reflection.rb	/^      def primary_key_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
proper_table_name	lib/active_record/migration.rb	/^      def proper_table_name(name)$/;"	f	class:Migrator
protected_attributes	lib/active_record/base.rb	/^      def protected_attributes # :nodoc:$/;"	f	class:ActiveRecord.Base
proxy_found	lib/active_record/named_scope.rb	/^      def proxy_found$/;"	f	class:ActiveRecord.NamedScope.Scope
proxy_owner	lib/active_record/associations/association_proxy.rb	/^      def proxy_owner$/;"	f	class:ActiveRecord.Associations.AssociationProxy
proxy_reflection	lib/active_record/associations/association_proxy.rb	/^      def proxy_reflection$/;"	f	class:ActiveRecord.Associations.AssociationProxy
proxy_respond_to?	lib/active_record/associations/association_collection.rb	/^      def proxy_respond_to?(method, include_private = false)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
proxy_target	lib/active_record/associations/association_proxy.rb	/^      def proxy_target$/;"	f	class:ActiveRecord.Associations.AssociationProxy
pull_finder_args_from	lib/active_record/associations/association_collection.rb	/^        def pull_finder_args_from(names, *args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
query	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def query(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
query_attribute	lib/active_record/attribute_methods.rb	/^    def query_attribute(attr_name)$/;"	f
quote	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote(value, column = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def quote(value, column = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
quote	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def quote(value, column = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
quote_bound_value	lib/active_record/base.rb	/^        def quote_bound_value(value) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
quote_column_name	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote_column_name(column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote_column_name	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def quote_column_name(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
quote_column_name	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def quote_column_name(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
quote_column_name	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def quote_column_name(name) #:nodoc:$/;"	f	class:SQLiteAdapter
quote_columns	lib/active_record/base.rb	/^      def quote_columns(quoter, hash)$/;"	f
quote_string	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote_string(s)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote_string	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def quote_string(string) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
quote_string	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def quote_string(original_value) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
quote_string	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def quote_string(s) #:nodoc:$/;"	f	class:SQLiteAdapter
quote_table_name	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote_table_name(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote_table_name	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def quote_table_name(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
quote_table_name	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def quote_table_name(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
quote_table_name	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def quote_table_name(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
quote_value	lib/active_record/base.rb	/^      def quote_value(value, column = nil) #:nodoc:$/;"	f	class:ActiveRecord.Base
quote_value	lib/active_record/base.rb	/^      def quote_value(value, column = nil)$/;"	f
quoted_column_names	lib/active_record/base.rb	/^      def quoted_column_names(attributes = attributes_with_quotes)$/;"	f
quoted_columns_for_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def quoted_columns_for_index(column_names, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
quoted_columns_for_index	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def quoted_columns_for_index(column_names, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
quoted_comma_pair_list	lib/active_record/base.rb	/^      def quoted_comma_pair_list(quoter, hash)$/;"	f
quoted_date	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quoted_date(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quoted_date	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def quoted_date(value) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
quoted_false	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quoted_false$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quoted_false	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def quoted_false$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
quoted_id	lib/active_record/base.rb	/^      def quoted_id #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions
quoted_locking_column	lib/active_record/locking/optimistic.rb	/^        def quoted_locking_column$/;"	f	class:ActiveRecord.Locking
quoted_record_ids	lib/active_record/associations/association_proxy.rb	/^        def quoted_record_ids(records)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
quoted_table_name	lib/active_record/base.rb	/^      def self.quoted_table_name$/;"	F
quoted_table_name	lib/active_record/reflection.rb	/^      def quoted_table_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
quoted_true	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quoted_true$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quoted_true	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def quoted_true$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
raise_if_bind_arity_mismatch	lib/active_record/base.rb	/^        def raise_if_bind_arity_mismatch(statement, expected, provided) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
raise_nested_attributes_record_not_found	lib/active_record/nested_attributes.rb	/^    def raise_nested_attributes_record_not_found(association_name, record_id)$/;"	f
raise_on_session_data_overflow!	lib/active_record/session_store.rb	/^        def raise_on_session_data_overflow!$/;"	f	class:ActiveRecord.SessionStore
raise_on_type_mismatch	lib/active_record/associations/association_proxy.rb	/^        def raise_on_type_mismatch(record)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
raw_connection	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def raw_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
read_attribute	lib/active_record/attribute_methods.rb	/^    def read_attribute(attr_name)$/;"	f
read_attribute_before_type_cast	lib/active_record/attribute_methods.rb	/^    def read_attribute_before_type_cast(attr_name)$/;"	f
read_csv_fixture_files	lib/active_record/fixtures.rb	/^    def read_csv_fixture_files$/;"	f
read_fixture_files	lib/active_record/fixtures.rb	/^      def read_fixture_files; end$/;"	f	class:Fixtures.HabtmFixtures
read_fixture_files	lib/active_record/fixtures.rb	/^    def read_fixture_files$/;"	f	class:Fixtures
read_yaml_fixture_files	lib/active_record/fixtures.rb	/^    def read_yaml_fixture_files$/;"	f	class:Fixtures
reader_method	lib/active_record/aggregations.rb	/^        def reader_method(name, class_name, mapping, allow_nil, constructor)$/;"	f	class:ActiveRecord.Aggregations.ClassMethods
readonly!	lib/active_record/base.rb	/^      def readonly!$/;"	f	class:sanitize_sql_hash_for_conditions
readonly?	lib/active_record/base.rb	/^      def readonly?$/;"	f	class:sanitize_sql_hash_for_conditions
readonly_attributes	lib/active_record/base.rb	/^       def readonly_attributes$/;"	f	class:ActiveRecord.Base
rebuild_attribute_method_regexp	lib/active_record/attribute_methods.rb	/^        def rebuild_attribute_method_regexp$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
reconnect!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def reconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
reconnect!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def reconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
reconnect!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def reconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
record_id	lib/active_record/associations.rb	/^            def record_id(row)$/;"	f	class:JoinDependency.remove_duplicate_results!.JoinBase
record_id	lib/active_record/associations/belongs_to_association.rb	/^        def record_id(record)$/;"	f	class:ActiveRecord.Associations
record_id	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def record_id(record)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
record_version_state_after_migrating	lib/active_record/migration.rb	/^      def record_version_state_after_migrating(version)$/;"	f
recreate_database	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def recreate_database(name, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
recreate_database	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def recreate_database(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
references	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def references(*args)$/;"	f	class:ActiveRecord
references	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def references(*args)$/;"	f	class:Table
references_eager_loaded_tables?	lib/active_record/associations.rb	/^        def references_eager_loaded_tables?(options)$/;"	f
reflect_on_aggregation	lib/active_record/reflection.rb	/^      def reflect_on_aggregation(aggregation)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_all_aggregations	lib/active_record/reflection.rb	/^      def reflect_on_all_aggregations$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_all_associations	lib/active_record/reflection.rb	/^      def reflect_on_all_associations(macro = nil)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_all_autosave_associations	lib/active_record/reflection.rb	/^      def reflect_on_all_autosave_associations$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_association	lib/active_record/reflection.rb	/^      def reflect_on_association(association)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_included_associations	lib/active_record/associations.rb	/^        def reflect_on_included_associations(associations)$/;"	f
reflections	lib/active_record/reflection.rb	/^      def reflections$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reformat_name	lib/active_record/serializers/xml_serializer.rb	/^    def reformat_name(name)$/;"	f	class:ActiveRecord.XmlSerializer
reject_new_record?	lib/active_record/nested_attributes.rb	/^    def reject_new_record?(association_name, attributes)$/;"	f
release_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def release_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
release_savepoint	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def release_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
release_savepoint	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def release_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
release_savepoint	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def release_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
reload	lib/active_record/associations/association_proxy.rb	/^      def reload$/;"	f	class:ActiveRecord.Associations.AssociationProxy
reload	lib/active_record/base.rb	/^      def reload(options = nil)$/;"	f	class:sanitize_sql_hash_for_conditions
reload	lib/active_record/named_scope.rb	/^      def reload$/;"	f	class:ActiveRecord.NamedScope.Scope
reload_with_autosave_associations	lib/active_record/autosave_association.rb	/^    def reload_with_autosave_associations(options = nil)$/;"	f	class:ActiveRecord
reload_with_dirty	lib/active_record/dirty.rb	/^    def reload_with_dirty(*args) #:nodoc:$/;"	f	class:ActiveRecord.Dirty
remove	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove(*column_names)$/;"	f	class:Table
remove_attributes_protected_from_mass_assignment	lib/active_record/base.rb	/^      def remove_attributes_protected_from_mass_assignment(attributes)$/;"	f
remove_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_column(table_name, *column_names)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_column	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def remove_column(table_name, *column_names) #:nodoc:$/;"	f
remove_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def remove_connection(klass)$/;"	f	class:ActiveRecord.ConnectionHandler
remove_connection	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def remove_connection(klass = self)$/;"	f	class:ActiveRecord.Base.establish_connection
remove_duplicate_results!	lib/active_record/associations.rb	/^          def remove_duplicate_results!(base, records, associations)$/;"	f	class:JoinDependency
remove_index	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove_index(options = {})$/;"	f	class:Table
remove_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_index(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_index!	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_index!(table_name, index_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_index!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def remove_index!(table_name, index_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
remove_index!	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def remove_index!(table_name, index_name) #:nodoc:$/;"	f
remove_readonly_attributes	lib/active_record/base.rb	/^      def remove_readonly_attributes(attributes)$/;"	f
remove_records	lib/active_record/associations/association_collection.rb	/^        def remove_records(*records)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
remove_references	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove_references(*args)$/;"	f	class:Table
remove_stale_cached_threads!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def remove_stale_cached_threads!(cache, &block)$/;"	f	class:ActiveRecord.ConnectionAdapters
remove_timestamps	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove_timestamps$/;"	f	class:Table
remove_timestamps	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_timestamps(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters
rename	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def rename(column_name, new_column_name)$/;"	f	class:Table
rename_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def rename_column(table_name, column_name, new_column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
rename_column	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def rename_column(table_name, column_name, new_column_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
rename_column	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def rename_column(table_name, column_name, new_column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
rename_column	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def rename_column(table_name, column_name, new_column_name) #:nodoc:$/;"	f
rename_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def rename_index(table_name, old_name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
rename_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def rename_table(table_name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
rename_table	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def rename_table(table_name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters
rename_table	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def rename_table(name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
rename_table	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def rename_table(name, new_name)$/;"	f
rename_table	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def rename_table(name, new_name)$/;"	f	class:SQLite2Adapter
replace	lib/active_record/associations/association_collection.rb	/^      def replace(other_array)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
replace	lib/active_record/associations/belongs_to_association.rb	/^      def replace(record)$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
replace	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^      def replace(record)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
replace	lib/active_record/associations/has_one_association.rb	/^      def replace(obj, dont_save = false)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
replace_bind_variables	lib/active_record/base.rb	/^        def replace_bind_variables(statement, values) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
replace_named_bind_variables	lib/active_record/base.rb	/^        def replace_named_bind_variables(statement, bind_vars) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
require_fixture_classes	lib/active_record/fixtures.rb	/^      def require_fixture_classes(table_names = nil)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
requires_reloading?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def requires_reloading?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
requires_reloading?	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def requires_reloading?$/;"	f	class:SQLiteAdapter
reset	lib/active_record/associations/association_collection.rb	/^      def reset$/;"	f	class:ActiveRecord.Associations.AssociationCollection
reset	lib/active_record/associations/association_proxy.rb	/^      def reset$/;"	f	class:ActiveRecord.Associations.AssociationProxy
reset!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def reset!$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
reset!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def reset!$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
reset_cache	lib/active_record/fixtures.rb	/^  def self.reset_cache(connection = nil)$/;"	F	class:Fixtures
reset_column_information	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def reset_column_information$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
reset_column_information	lib/active_record/base.rb	/^      def reset_column_information$/;"	f	class:ActiveRecord.Base
reset_column_information	lib/active_record/reflection.rb	/^      def reset_column_information$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
reset_column_information_and_inheritable_attributes_for_all_subclasses	lib/active_record/base.rb	/^      def reset_column_information_and_inheritable_attributes_for_all_subclasses#:nodoc:$/;"	f	class:ActiveRecord.Base
reset_counters	lib/active_record/base.rb	/^      def reset_counters(id, *counters)$/;"	f	class:ActiveRecord.Base
reset_locking_column	lib/active_record/locking/optimistic.rb	/^        def reset_locking_column$/;"	f	class:ActiveRecord.Locking
reset_pk_sequence!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def reset_pk_sequence!(table, pk = nil, sequence = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
reset_primary_key	lib/active_record/base.rb	/^      def reset_primary_key #:nodoc:$/;"	f	class:ActiveRecord.Base
reset_runtime	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def reset_runtime #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
reset_sequence!	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def reset_sequence!(table, column, sequence = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
reset_sequence_name	lib/active_record/base.rb	/^      def reset_sequence_name #:nodoc:$/;"	f	class:ActiveRecord.Base
reset_subclasses	lib/active_record/base.rb	/^    def self.reset_subclasses #:nodoc:$/;"	F	class:ActiveRecord.Base
reset_table_name	lib/active_record/base.rb	/^      def reset_table_name #:nodoc:$/;"	f	class:ActiveRecord.Base
reset_target!	lib/active_record/associations/association_collection.rb	/^        def reset_target!$/;"	f	class:ActiveRecord.Associations.AssociationCollection
reset_target!	lib/active_record/associations/has_one_through_association.rb	/^      def reset_target!$/;"	f	class:ActiveRecord.Associations.HasOneThroughAssociation
respond_to?	lib/active_record/associations/association_proxy.rb	/^      def respond_to?(*args)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
respond_to?	lib/active_record/attribute_methods.rb	/^    def respond_to?(method, include_private_methods = false)$/;"	f
respond_to?	lib/active_record/base.rb	/^      def respond_to?(method_id, include_private = false)$/;"	f	class:ActiveRecord.Base
respond_to?	lib/active_record/named_scope.rb	/^      def respond_to?(method, include_private = false)$/;"	f	class:ActiveRecord.NamedScope.Scope
result_as_array	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def result_as_array(res) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
retrieve_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def retrieve_connection(klass) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionHandler
retrieve_connection	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def retrieve_connection$/;"	f	class:ActiveRecord.Base.establish_connection
retrieve_connection_pool	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def retrieve_connection_pool(klass)$/;"	f	class:ActiveRecord.ConnectionHandler
reverse_sql_order	lib/active_record/base.rb	/^        def reverse_sql_order(order_query)$/;"	f	class:ActiveRecord.Base
rollback	lib/active_record/migration.rb	/^      def rollback(migrations_path, steps=1)$/;"	f	class:Migrator
rollback_active_record_state!	lib/active_record/transactions.rb	/^    def rollback_active_record_state!$/;"	f	class:ActiveRecord.Transactions
rollback_db_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def rollback_db_transaction() end$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
rollback_db_transaction	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def rollback_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
rollback_db_transaction	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def rollback_db_transaction$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
rollback_db_transaction	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def rollback_db_transaction #:nodoc:$/;"	f	class:SQLiteAdapter
rollback_to_savepoint	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def rollback_to_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
rollback_to_savepoint	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def rollback_to_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
rollback_to_savepoint	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def rollback_to_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
root	lib/active_record/serializers/xml_serializer.rb	/^    def root$/;"	f	class:ActiveRecord.XmlSerializer
run	lib/active_record/migration.rb	/^      def run(direction, migrations_path, target_version)$/;"	f	class:Migrator
run	lib/active_record/migration.rb	/^    def run$/;"	f
run_in_transaction?	lib/active_record/fixtures.rb	/^    def run_in_transaction?$/;"	f	class:ActiveRecord.TestFixtures
safe_to_array	lib/active_record/base.rb	/^        def safe_to_array(o)$/;"	f	class:ActiveRecord.Base
sanitize	lib/active_record/base.rb	/^      def sanitize(object) #:nodoc:$/;"	f	class:ActiveRecord.Base
sanitize_limit	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def sanitize_limit(limit)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
sanitize_sql	lib/active_record/associations/association_proxy.rb	/^        def sanitize_sql(sql, table_name = @reflection.klass.quoted_table_name)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
sanitize_sql_array	lib/active_record/base.rb	/^        def sanitize_sql_array(ary)$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
sanitize_sql_for_assignment	lib/active_record/base.rb	/^        def sanitize_sql_for_assignment(assignments)$/;"	f
sanitize_sql_for_conditions	lib/active_record/base.rb	/^        def sanitize_sql_for_conditions(condition, table_name = quoted_table_name)$/;"	f
sanitize_sql_hash_for_assignment	lib/active_record/base.rb	/^        def sanitize_sql_hash_for_assignment(attrs)$/;"	f	class:sanitize_sql_hash_for_conditions
sanitize_sql_hash_for_conditions	lib/active_record/base.rb	/^        def sanitize_sql_hash_for_conditions(attrs, default_table_name = quoted_table_name, top_level = true)$/;"	f
sanitized_conditions	lib/active_record/reflection.rb	/^      def sanitized_conditions #:nodoc:$/;"	f	class:ActiveRecord.Reflection.MacroReflection
save	lib/active_record/base.rb	/^      def save$/;"	f	class:sanitize_sql_hash_for_conditions
save	lib/active_record/session_store.rb	/^      def save$/;"	f	class:ActiveRecord
save!	lib/active_record/base.rb	/^      def save!$/;"	f	class:sanitize_sql_hash_for_conditions
save_belongs_to_association	lib/active_record/autosave_association.rb	/^    def save_belongs_to_association(reflection)$/;"	f	class:ActiveRecord
save_collection_association	lib/active_record/autosave_association.rb	/^    def save_collection_association(reflection)$/;"	f	class:ActiveRecord
save_has_one_association	lib/active_record/autosave_association.rb	/^    def save_has_one_association(reflection)$/;"	f	class:ActiveRecord
save_with_dirty	lib/active_record/dirty.rb	/^    def save_with_dirty(*args) #:nodoc:$/;"	f	class:ActiveRecord.Dirty
save_with_dirty!	lib/active_record/dirty.rb	/^    def save_with_dirty!(*args) #:nodoc:$/;"	f	class:ActiveRecord.Dirty
save_with_transactions	lib/active_record/transactions.rb	/^    def save_with_transactions(perform_validation = true) #:nodoc:$/;"	f	class:ActiveRecord.Transactions
save_with_transactions!	lib/active_record/transactions.rb	/^    def save_with_transactions! #:nodoc:$/;"	f	class:ActiveRecord.Transactions
save_with_validation	lib/active_record/validations.rb	/^    def save_with_validation(perform_validation = true)$/;"	f	class:ActiveRecord.Validations
save_with_validation!	lib/active_record/validations.rb	/^    def save_with_validation!$/;"	f	class:ActiveRecord.Validations
say	lib/active_record/migration.rb	/^      def say(message, subitem=false)$/;"	f	class:ActiveRecord.Migration
say_with_time	lib/active_record/migration.rb	/^      def say_with_time(message)$/;"	f	class:ActiveRecord.Migration
schema_migrations_table_name	lib/active_record/migration.rb	/^      def schema_migrations_table_name$/;"	f	class:Migrator
schema_search_path	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def schema_search_path$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
schema_search_path=	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def schema_search_path=(schema_csv)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
scope	lib/active_record/base.rb	/^        def scope(method, key = nil) #:nodoc:$/;"	f
scope?	lib/active_record/dynamic_scope_match.rb	/^    def scope?$/;"	f	class:ActiveRecord.DynamicScopeMatch
scoped	lib/active_record/named_scope.rb	/^      def scoped(scope, &block)$/;"	f	class:ActiveRecord.NamedScope.ClassMethods
scoped?	lib/active_record/base.rb	/^        def scoped?(method, key = nil) #:nodoc:$/;"	f
scoped_methods	lib/active_record/base.rb	/^        def scoped_methods #:nodoc:$/;"	f
scopes	lib/active_record/named_scope.rb	/^      def scopes$/;"	f	class:ActiveRecord.NamedScope.ClassMethods
select	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def select(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def select(sql, name = nil)$/;"	f	class:ActiveRecord
select	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def select(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
select	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def select(sql, name = nil) #:nodoc:$/;"	f
select_all	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_all(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_all_rows	lib/active_record/associations.rb	/^        def select_all_rows(options, join_dependency)$/;"	f
select_all_with_query_cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def select_all_with_query_cache(*args)$/;"	f	class:ActiveRecord
select_limited_ids_list	lib/active_record/associations.rb	/^        def select_limited_ids_list(options, join_dependency)$/;"	f
select_one	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_one(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_raw	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def select_raw(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
select_rows	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_rows	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
select_rows	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
select_rows	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:SQLiteAdapter
select_value	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_value(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_values	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_values(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
selects_tables	lib/active_record/associations.rb	/^        def selects_tables(options)$/;"	f
self_and_descendants_from_active_record	lib/active_record/base.rb	/^      def self_and_descendants_from_active_record#nodoc:$/;"	f	class:ActiveRecord.Base
send	lib/active_record/associations/association_proxy.rb	/^      def send(method, *args)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
sequence_name	lib/active_record/base.rb	/^      def sequence_name #:nodoc:$/;"	f	class:ActiveRecord.Base
serializable_attribute_names	lib/active_record/serialization.rb	/^      def serializable_attribute_names$/;"	f	class:ActiveRecord.Serialization.Serializer
serializable_attributes	lib/active_record/serializers/xml_serializer.rb	/^    def serializable_attributes$/;"	f	class:ActiveRecord.XmlSerializer
serializable_method_attributes	lib/active_record/serializers/xml_serializer.rb	/^    def serializable_method_attributes$/;"	f	class:ActiveRecord.XmlSerializer
serializable_method_names	lib/active_record/serialization.rb	/^      def serializable_method_names$/;"	f	class:ActiveRecord.Serialization.Serializer
serializable_names	lib/active_record/serialization.rb	/^      def serializable_names$/;"	f	class:ActiveRecord.Serialization.Serializer
serializable_record	lib/active_record/serialization.rb	/^      def serializable_record$/;"	f	class:ActiveRecord.Serialization
serialize	lib/active_record/base.rb	/^      def serialize(attr_name, class_name = Object)$/;"	f	class:ActiveRecord.Base
serialize	lib/active_record/serialization.rb	/^      def serialize$/;"	f	class:ActiveRecord.Serialization
serialize	lib/active_record/serializers/xml_serializer.rb	/^    def serialize$/;"	f	class:ActiveRecord.XmlSerializer
serialized_attributes	lib/active_record/base.rb	/^      def serialized_attributes$/;"	f	class:ActiveRecord.Base
set_association_collection_records	lib/active_record/association_preload.rb	/^      def set_association_collection_records(id_to_record_map, reflection_name, associated_records, key)$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
set_association_single_records	lib/active_record/association_preload.rb	/^      def set_association_single_records(id_to_record_map, reflection_name, associated_records, key)$/;"	f	class:ActiveRecord.AssociationPreload.ClassMethods
set_belongs_to_association_for	lib/active_record/associations/association_proxy.rb	/^        def set_belongs_to_association_for(record)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
set_fixture_class	lib/active_record/fixtures.rb	/^      def set_fixture_class(class_names = {})$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
set_inheritance_column	lib/active_record/base.rb	/^      def set_inheritance_column(value = nil, &block)$/;"	f	class:ActiveRecord.Base
set_inverse_instance	lib/active_record/associations/association_proxy.rb	/^        def set_inverse_instance(record, instance)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
set_inverse_instance	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def set_inverse_instance(record, instance)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
set_locking_column	lib/active_record/locking/optimistic.rb	/^        def set_locking_column(value = nil, &block)$/;"	f	class:ActiveRecord.Locking
set_primary_key	lib/active_record/base.rb	/^      def set_primary_key(value = nil, &block)$/;"	f	class:ActiveRecord.Base
set_readonly_option!	lib/active_record/base.rb	/^        def set_readonly_option!(options) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
set_sequence_name	lib/active_record/base.rb	/^      def set_sequence_name(value = nil, &block)$/;"	f	class:ActiveRecord.Base
set_session	lib/active_record/session_store.rb	/^      def set_session(env, sid, session_data)$/;"	f
set_standard_conforming_strings	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def set_standard_conforming_strings$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
set_table_name	lib/active_record/base.rb	/^      def set_table_name(value = nil, &block)$/;"	f	class:ActiveRecord.Base
set_target_and_inverse	lib/active_record/associations.rb	/^            def set_target_and_inverse(join, association, record)$/;"	f	class:JoinDependency.remove_duplicate_results!
setup_fixture_accessors	lib/active_record/fixtures.rb	/^      def setup_fixture_accessors(table_names = nil)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
setup_fixtures	lib/active_record/fixtures.rb	/^    def setup_fixtures$/;"	f	class:ActiveRecord.TestFixtures
setup_sessid_compatibility!	lib/active_record/session_store.rb	/^          def setup_sessid_compatibility!$/;"	f	class:ActiveRecord.SessionStore.Session
show_variable	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def show_variable(name)$/;"	f	class:ActiveRecord.ConnectionAdapters
silence	lib/active_record/base.rb	/^      def silence$/;"	f	class:ActiveRecord.Base
simplified_type	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def simplified_type(field_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
simplified_type	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def simplified_type(field_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlColumn
simplified_type	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def simplified_type(field_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
singleton_method_added	lib/active_record/migration.rb	/^      def singleton_method_added(sym) #:nodoc:$/;"	f	class:ActiveRecord.Migration
size	lib/active_record/associations/association_collection.rb	/^      def size$/;"	f	class:ActiveRecord.Associations.AssociationCollection
size	lib/active_record/associations/has_many_through_association.rb	/^      def size$/;"	f	class:ActiveRecord.Associations
size	lib/active_record/named_scope.rb	/^      def size$/;"	f	class:ActiveRecord.NamedScope.Scope
size	lib/active_record/validations.rb	/^    def size$/;"	f	class:ActiveRecord.Error
source_reflection	lib/active_record/reflection.rb	/^      def source_reflection$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
source_reflection	lib/active_record/reflection.rb	/^      def source_reflection$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
source_reflection_names	lib/active_record/reflection.rb	/^      def source_reflection_names$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
sql_query_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def sql_query_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
sql_type	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def sql_type$/;"	f	class:ActiveRecord.ColumnDefinition
sqlite3_connection	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^    def self.sqlite3_connection(config) # :nodoc:$/;"	F	class:ActiveRecord.Base
sqlite_connection	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def sqlite_connection(config) # :nodoc:$/;"	f	class:ActiveRecord.Base
sqlite_version	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def sqlite_version$/;"	f
sti_name	lib/active_record/base.rb	/^      def sti_name$/;"	f	class:ActiveRecord.Base
string_to_binary	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def string_to_binary(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
string_to_binary	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def string_to_binary(value)$/;"	f	class:ConnectionAdapters.SQLiteColumn
string_to_date	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def string_to_date(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
string_to_dummy_time	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def string_to_dummy_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
string_to_time	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def string_to_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
structure_dump	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def structure_dump$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
structure_dump	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def structure_dump #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
subclasses	lib/active_record/base.rb	/^        def subclasses #:nodoc:$/;"	f
sum	lib/active_record/associations/association_collection.rb	/^      def sum(*args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
sum	lib/active_record/calculations.rb	/^      def sum(column_name, options = {})$/;"	f	class:ActiveRecord.Calculations.ClassMethods
supports_add_column?	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def supports_add_column?$/;"	f	class:SQLiteAdapter
supports_autoincrement?	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def supports_autoincrement? #:nodoc:$/;"	f	class:SQLiteAdapter
supports_count_distinct?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_count_distinct?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_count_distinct?	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def supports_count_distinct? #:nodoc:$/;"	f	class:SQLiteAdapter
supports_ddl_transactions?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_ddl_transactions?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_ddl_transactions?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_ddl_transactions?$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
supports_ddl_transactions?	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def supports_ddl_transactions?$/;"	f	class:SQLiteAdapter
supports_disable_referential_integrity?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_disable_referential_integrity?() #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
supports_insert_with_returning?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_insert_with_returning?$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
supports_migrations?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_migrations?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_migrations?	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def supports_migrations? #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
supports_migrations?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_migrations?$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
supports_migrations?	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def supports_migrations? #:nodoc:$/;"	f	class:SQLiteAdapter
supports_primary_key?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_primary_key?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_primary_key?	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def supports_primary_key? #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
supports_primary_key?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_primary_key? #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
supports_primary_key?	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def supports_primary_key? #:nodoc:$/;"	f	class:SQLiteAdapter
supports_savepoints?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_savepoints?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_savepoints?	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def supports_savepoints? #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
supports_savepoints?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_savepoints?$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
supports_views?	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def supports_views?$/;"	f	class:ActiveRecord
suppress_messages	lib/active_record/migration.rb	/^      def suppress_messages$/;"	f	class:ActiveRecord.Migration
table	lib/active_record/schema_dumper.rb	/^      def table(table, stream)$/;"	f	class:ActiveRecord.SchemaDumper
table_alias_for	lib/active_record/associations.rb	/^              def table_alias_for(table_name, table_alias)$/;"	f	class:JoinDependency.remove_duplicate_results!
table_alias_for	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def table_alias_for(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
table_alias_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def table_alias_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
table_alias_length	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def table_alias_length$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
table_exists?	lib/active_record/base.rb	/^      def table_exists?$/;"	f	class:ActiveRecord.Base
table_exists?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def table_exists?(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
table_name	lib/active_record/base.rb	/^      def table_name$/;"	f	class:ActiveRecord.Base
table_name	lib/active_record/reflection.rb	/^      def table_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
table_name_and_alias	lib/active_record/associations.rb	/^              def table_name_and_alias$/;"	f	class:JoinDependency.remove_duplicate_results!
table_name_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def table_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
table_structure	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def table_structure(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SQLite3Adapter
table_structure	lib/active_record/connection_adapters/sqlite_adapter.rb	/^        def table_structure(table_name)$/;"	f
tables	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def tables(name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
tables	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def tables(name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
tables	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def tables(name = nil) #:nodoc:$/;"	f	class:SQLiteAdapter
tables	lib/active_record/schema_dumper.rb	/^      def tables(stream)$/;"	f	class:ActiveRecord.SchemaDumper
tables_in_hash	lib/active_record/associations.rb	/^        def tables_in_hash(hash)$/;"	f
tables_in_string	lib/active_record/associations.rb	/^        def tables_in_string(string)$/;"	f
target	lib/active_record/associations/association_proxy.rb	/^      def target$/;"	f	class:ActiveRecord.Associations.AssociationProxy
target=	lib/active_record/associations/association_proxy.rb	/^      def target=(target)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
target_obsolete?	lib/active_record/associations/has_many_association.rb	/^        def target_obsolete?$/;"	f	class:ActiveRecord.Associations
target_reflection_has_associated_record?	lib/active_record/associations/has_many_through_association.rb	/^        def target_reflection_has_associated_record?$/;"	f	class:ActiveRecord.Associations
teardown_fixtures	lib/active_record/fixtures.rb	/^    def teardown_fixtures$/;"	f	class:ActiveRecord.TestFixtures
text?	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def text?$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
through_reflection	lib/active_record/reflection.rb	/^      def through_reflection$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
through_reflection	lib/active_record/reflection.rb	/^      def through_reflection$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
through_reflection_primary_key	lib/active_record/reflection.rb	/^      def through_reflection_primary_key$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
through_reflection_primary_key_name	lib/active_record/reflection.rb	/^      def through_reflection_primary_key_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
through_reflection_primary_key_name	lib/active_record/reflection.rb	/^      def through_reflection_primary_key_name$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
timestamp_column_names	lib/active_record/fixtures.rb	/^    def timestamp_column_names$/;"	f	class:Fixtures
timestamps	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def timestamps$/;"	f	class:Table
timestamps	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def timestamps(*args)$/;"	f	class:ActiveRecord
to_ary	lib/active_record/associations/association_collection.rb	/^      def to_ary$/;"	f	class:ActiveRecord.Associations.AssociationCollection
to_hash	lib/active_record/fixtures.rb	/^  def to_hash$/;"	f	class:Fixture
to_json	lib/active_record/serializers/json_serializer.rb	/^    def to_json(options = {})$/;"	f	class:ActiveRecord.Serialization
to_param	lib/active_record/base.rb	/^      def to_param$/;"	f	class:sanitize_sql_hash_for_conditions
to_s	lib/active_record/serialization.rb	/^      def to_s(&block)$/;"	f	class:ActiveRecord.Serialization
to_sql	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def to_sql$/;"	f	class:ActiveRecord
to_sql	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def to_sql$/;"	f	class:ActiveRecord.ColumnDefinition
to_xml	lib/active_record/serializers/xml_serializer.rb	/^    def to_xml(options = {}, &block)$/;"	f	class:ActiveRecord.Serialization
to_xml	lib/active_record/validations.rb	/^    def to_xml(options={})$/;"	f	class:ActiveRecord.Error
toggle	lib/active_record/base.rb	/^      def toggle(attribute)$/;"	f	class:sanitize_sql_hash_for_conditions
toggle!	lib/active_record/base.rb	/^      def toggle!(attribute)$/;"	f	class:sanitize_sql_hash_for_conditions
touch	lib/active_record/timestamp.rb	/^    def touch(attribute = nil)$/;"	f	class:ActiveRecord.Timestamp
trailer	lib/active_record/schema_dumper.rb	/^      def trailer(stream)$/;"	f	class:ActiveRecord.SchemaDumper
transaction	lib/active_record/associations/association_collection.rb	/^      def transaction(*args)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def transaction(options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
transaction	lib/active_record/transactions.rb	/^      def transaction(options = {}, &block)$/;"	f	class:ActiveRecord.Transactions.ClassMethods
transaction	lib/active_record/transactions.rb	/^    def transaction(&block)$/;"	f	class:ActiveRecord.Transactions
transaction_joinable=	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def transaction_joinable=(joinable)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
try_to_load_dependency	lib/active_record/fixtures.rb	/^      def try_to_load_dependency(file_name)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
type_cast	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
type_cast_attribute_value	lib/active_record/base.rb	/^      def type_cast_attribute_value(multiparameter_name, value)$/;"	f
type_cast_calculated_value	lib/active_record/calculations.rb	/^        def type_cast_calculated_value(value, column, operation = nil)$/;"	f	class:ActiveRecord.Calculations.ClassMethods
type_cast_code	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def type_cast_code(var_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
type_cast_using_column	lib/active_record/calculations.rb	/^        def type_cast_using_column(value, column)$/;"	f	class:ActiveRecord.Calculations.ClassMethods
type_condition	lib/active_record/base.rb	/^        def type_condition(table_alias=nil)$/;"	f	class:ActiveRecord.Base
type_name_with_module	lib/active_record/base.rb	/^        def type_name_with_module(type_name)$/;"	f	class:ActiveRecord.Base
type_to_sql	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def type_to_sql(type, limit = nil, precision = nil, scale = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
type_to_sql	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def type_to_sql(type, limit = nil, precision = nil, scale = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters
type_to_sql	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def type_to_sql(type, limit = nil, precision = nil, scale = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
uncached	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def uncached$/;"	f	class:ActiveRecord
uncached	lib/active_record/query_cache.rb	/^      def uncached(&block)$/;"	f	class:ActiveRecord.QueryCache.ClassMethods
undecorated_table_name	lib/active_record/base.rb	/^        def undecorated_table_name(class_name = base_class.name)$/;"	f	class:ActiveRecord
unescape_bytea	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def unescape_bytea(original_value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
uniq	lib/active_record/associations/association_collection.rb	/^      def uniq(collection = self)$/;"	f	class:ActiveRecord.Associations.AssociationCollection
unmarshal	lib/active_record/session_store.rb	/^        def unmarshal(data)$/;"	f	class:ActiveRecord.SessionStore.Session
unmarshal	lib/active_record/session_store.rb	/^        def unmarshal(data)$/;"	f	class:ActiveRecord.SqlBypass
unserializable_attribute?	lib/active_record/attribute_methods.rb	/^    def unserializable_attribute?(attr_name, column)$/;"	f
unserialize_attribute	lib/active_record/attribute_methods.rb	/^    def unserialize_attribute(attr_name)$/;"	f
up	lib/active_record/migration.rb	/^      def up(migrations_path, target_version = nil)$/;"	f	class:Migrator
up?	lib/active_record/migration.rb	/^      def up?$/;"	f
up_with_benchmarks	lib/active_record/migration.rb	/^      def up_with_benchmarks #:nodoc:$/;"	f	class:ActiveRecord.Migration
update	lib/active_record/base.rb	/^      def update(attribute_names = @attributes.keys)$/;"	f	class:sanitize_sql_hash_for_conditions
update	lib/active_record/base.rb	/^      def update(id, attributes)$/;"	f	class:ActiveRecord.Base
update	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def update(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
update	lib/active_record/observer.rb	/^    def update(observed_method, object) #:nodoc:$/;"	f	class:ActiveRecord
update_all	lib/active_record/base.rb	/^      def update_all(updates, conditions = nil, options = {})$/;"	f	class:ActiveRecord.Base
update_attribute	lib/active_record/base.rb	/^      def update_attribute(name, value)$/;"	f	class:sanitize_sql_hash_for_conditions
update_attributes	lib/active_record/base.rb	/^      def update_attributes(attributes)$/;"	f	class:sanitize_sql_hash_for_conditions
update_attributes!	lib/active_record/base.rb	/^      def update_attributes!(attributes)$/;"	f	class:sanitize_sql_hash_for_conditions
update_attributes_inside_transaction	lib/active_record/base.rb	/^      def update_attributes_inside_transaction(attributes) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions
update_attributes_inside_transaction!	lib/active_record/base.rb	/^      def update_attributes_inside_transaction!(attributes) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions
update_counters	lib/active_record/base.rb	/^      def update_counters(id, counters)$/;"	f	class:ActiveRecord.Base
update_counters_with_lock	lib/active_record/locking/optimistic.rb	/^        def update_counters_with_lock(id, counters)$/;"	f	class:ActiveRecord.Locking
update_sql	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def update_sql(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
update_sql	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def update_sql(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
update_sql	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def update_sql(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.result_as_array
update_sql	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def update_sql(sql, name = nil) #:nodoc:$/;"	f	class:SQLiteAdapter
update_with_callbacks	lib/active_record/callbacks.rb	/^    def update_with_callbacks(*args) #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
update_with_dirty	lib/active_record/dirty.rb	/^      def update_with_dirty$/;"	f	class:ActiveRecord.Dirty
update_with_lock	lib/active_record/locking/optimistic.rb	/^        def update_with_lock(attribute_names = @attributes.keys) #:nodoc:$/;"	f	class:ActiveRecord.Locking
update_with_timestamps	lib/active_record/timestamp.rb	/^      def update_with_timestamps(*args) #:nodoc:$/;"	f	class:ActiveRecord.Timestamp
updated?	lib/active_record/associations/belongs_to_association.rb	/^      def updated?$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
updated?	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^      def updated?$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
use_concurrent_connections	lib/active_record/test_case.rb	/^    def self.use_concurrent_connections$/;"	F	class:ActiveRecord.TestCase
uses_transaction	lib/active_record/fixtures.rb	/^      def uses_transaction(*methods)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
uses_transaction?	lib/active_record/fixtures.rb	/^      def uses_transaction?(method)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
using_limitable_reflections?	lib/active_record/associations.rb	/^        def using_limitable_reflections?(reflections)$/;"	f
valid?	lib/active_record/validations.rb	/^    def valid?$/;"	f	class:ActiveRecord.Validations
valid_alter_table_options	lib/active_record/connection_adapters/sqlite_adapter.rb	/^      def valid_alter_table_options( type, options)$/;"	f
valid_with_callbacks?	lib/active_record/callbacks.rb	/^    def valid_with_callbacks? #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
validate	lib/active_record/validations.rb	/^      def validate$/;"	f	class:ActiveRecord.Validations
validate?	lib/active_record/reflection.rb	/^      def validate?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
validate_calculation_options	lib/active_record/calculations.rb	/^        def validate_calculation_options(operation, options = {})$/;"	f	class:ActiveRecord.Calculations.ClassMethods
validate_collection_association	lib/active_record/autosave_association.rb	/^    def validate_collection_association(reflection)$/;"	f	class:ActiveRecord
validate_find_options	lib/active_record/base.rb	/^        def validate_find_options(options) #:nodoc:$/;"	f	class:sanitize_sql_hash_for_conditions.sanitize_sql_hash_for_assignment
validate_on_create	lib/active_record/validations.rb	/^      def validate_on_create$/;"	f	class:ActiveRecord.Validations
validate_on_update	lib/active_record/validations.rb	/^      def validate_on_update$/;"	f	class:ActiveRecord.Validations
validate_single_association	lib/active_record/autosave_association.rb	/^    def validate_single_association(reflection)$/;"	f	class:ActiveRecord
validates_acceptance_of	lib/active_record/validations.rb	/^      def validates_acceptance_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_associated	lib/active_record/validations.rb	/^      def validates_associated(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_confirmation_of	lib/active_record/validations.rb	/^      def validates_confirmation_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_each	lib/active_record/validations.rb	/^      def validates_each(*attrs)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_exclusion_of	lib/active_record/validations.rb	/^      def validates_exclusion_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_format_of	lib/active_record/validations.rb	/^      def validates_format_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_inclusion_of	lib/active_record/validations.rb	/^      def validates_inclusion_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_length_of	lib/active_record/validations.rb	/^      def validates_length_of(*attrs)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_numericality_of	lib/active_record/validations.rb	/^      def validates_numericality_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_presence_of	lib/active_record/validations.rb	/^      def validates_presence_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_uniqueness_of	lib/active_record/validations.rb	/^      def validates_uniqueness_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validation_method	lib/active_record/validations.rb	/^        def validation_method(on)$/;"	f	class:ActiveRecord.Validations.ClassMethods
value	lib/active_record/validations.rb	/^    def value$/;"	f	class:ActiveRecord.Error
value_list	lib/active_record/fixtures.rb	/^  def value_list$/;"	f	class:Fixture
value_to_boolean	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def value_to_boolean(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
value_to_decimal	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def value_to_decimal(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
values	lib/active_record/fixtures.rb	/^      def values; map { |k, v| v } end$/;"	f	class:YAML.Omap
verification_timeout	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def verification_timeout$/;"	f	class:ActiveRecord.Base.establish_connection
verification_timeout=	lib/active_record/connection_adapters/abstract/connection_specification.rb	/^      def verification_timeout=(flag)$/;"	f	class:ActiveRecord.Base.establish_connection
verify!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def verify!(*ignored)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
verify_active_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def verify_active_connections! #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
verify_active_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def verify_active_connections! #:nodoc:$/;"	f	class:ActiveRecord.ConnectionHandler
version	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def version$/;"	f	class:ActiveRecord
we_can_set_the_inverse_on_this?	lib/active_record/associations/association_proxy.rb	/^        def we_can_set_the_inverse_on_this?(record)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
we_can_set_the_inverse_on_this?	lib/active_record/associations/belongs_to_association.rb	/^        def we_can_set_the_inverse_on_this?(record)$/;"	f	class:ActiveRecord
we_can_set_the_inverse_on_this?	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def we_can_set_the_inverse_on_this?(record)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
we_can_set_the_inverse_on_this?	lib/active_record/associations/has_many_association.rb	/^        def we_can_set_the_inverse_on_this?(record)$/;"	f	class:ActiveRecord.Associations
we_can_set_the_inverse_on_this?	lib/active_record/associations/has_many_through_association.rb	/^        def we_can_set_the_inverse_on_this?(record)$/;"	f	class:ActiveRecord.Associations
we_can_set_the_inverse_on_this?	lib/active_record/associations/has_one_association.rb	/^        def we_can_set_the_inverse_on_this?(record)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
with_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def with_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
with_exclusive_scope	lib/active_record/base.rb	/^        def with_exclusive_scope(method_scoping = {}, &block)$/;"	f
with_kcode	lib/active_record/test_case.rb	/^    def with_kcode(kcode)$/;"	f	class:ActiveRecord.TestCase
with_scope	lib/active_record/associations/association_proxy.rb	/^        def with_scope(*args, &block)$/;"	f	class:ActiveRecord.Associations.AssociationProxy
with_scope	lib/active_record/base.rb	/^        def with_scope(method_scoping = {}, action = :merge, &block)$/;"	f
with_transaction_returning_status	lib/active_record/transactions.rb	/^    def with_transaction_returning_status(method, *args)$/;"	f	class:ActiveRecord.Transactions
write	lib/active_record/migration.rb	/^      def write(text="")$/;"	f	class:ActiveRecord.Migration
write_attribute	lib/active_record/attribute_methods.rb	/^    def write_attribute(attr_name, value)$/;"	f
write_attribute_with_dirty	lib/active_record/dirty.rb	/^      def write_attribute_with_dirty(attr, value)$/;"	f	class:ActiveRecord.Dirty
writer_method	lib/active_record/aggregations.rb	/^        def writer_method(name, class_name, mapping, allow_nil, converter)$/;"	f	class:ActiveRecord.Aggregations
xml	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def xml(*args)$/;"	f	class:ActiveRecord.ConnectionAdapters.TableDefinition
xml_column_fallback	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def xml_column_fallback(*args)$/;"	f	class:ActiveRecord.TableDefinition
yaml_file_path	lib/active_record/fixtures.rb	/^    def yaml_file_path$/;"	f
yaml_fixtures_key	lib/active_record/fixtures.rb	/^    def yaml_fixtures_key(path)$/;"	f
